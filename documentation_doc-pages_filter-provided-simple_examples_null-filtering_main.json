{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'athlete' },\n    {\n        field: 'age',\n        maxWidth: 120,\n        filter: 'agNumberColumnFilter',\n        filterParams: {\n            includeBlanksInEquals: false,\n            includeBlanksInLessThan: false,\n            includeBlanksInGreaterThan: false,\n            includeBlanksInRange: false,\n        },\n    },\n    {\n        field: 'date',\n        filter: 'agDateColumnFilter',\n        filterParams: filterParams,\n    },\n    {\n        headerName: 'Description',\n        valueGetter: '\"Age is \" + data.age + \" and Date is \" + data.date',\n        minWidth: 340,\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    resizable: true,\n}"
    }
  ],
  "components": [],
  "defaultColDef": null,
  "globalComponents": [],
  "parsedColDefs": "",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "changeNull",
      "params": "'equals', false",
      "body": "function changeNull(toChange, value) {\n    switch (toChange) {\n        case 'equals':\n            columnDefs[1].filterParams.includeBlanksInEquals = value;\n            columnDefs[2].filterParams.includeBlanksInEquals = value;\n            break;\n        case 'lessThan':\n            columnDefs[1].filterParams.includeBlanksInLessThan = value;\n            columnDefs[2].filterParams.includeBlanksInLessThan = value;\n            break;\n        case 'greaterThan':\n            columnDefs[1].filterParams.includeBlanksInGreaterThan = value;\n            columnDefs[2].filterParams.includeBlanksInGreaterThan = value;\n            break;\n        case 'inRange':\n            columnDefs[1].filterParams.includeBlanksInRange = value;\n            columnDefs[2].filterParams.includeBlanksInRange = value;\n            break;\n    }\n    var filterModel = this.gridApi.getFilterModel();\n    this.gridApi.setColumnDefs(columnDefs);\n    this.gridApi.destroyFilter('age');\n    this.gridApi.destroyFilter('date');\n    this.gridApi.setFilterModel(filterModel);\n}"
    }
  ],
  "utils": [
    "var filterParams = {\n    comparator: function (filterLocalDateAtMidnight, cellValue) {\n        var dateAsString = cellValue;\n        if (dateAsString == null)\n            return -1;\n        var dateParts = dateAsString.split('/');\n        var cellDate = new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\n        if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\n            return 0;\n        }\n        if (cellDate < filterLocalDateAtMidnight) {\n            return -1;\n        }\n        if (cellDate > filterLocalDateAtMidnight) {\n            return 1;\n        }\n        return 0;\n    },\n    includeBlanksInEquals: false,\n    includeBlanksInLessThan: false,\n    includeBlanksInGreaterThan: false,\n    includeBlanksInRange: false,\n};"
  ],
  "callbackDependencies": { "changeNull": ["columnDefs", "gridOptions"] },
  "template": "<div class=\"test-container\">\n    <div class=\"test-header\">\n        <div>Include NULL<br />in age/date:</div>\n        <div class=\"configuration-option\">\n            <div><strong>equals</strong></div>\n            <div>\n                <label>\n                    <input type=\"radio\" name=\"equals\" value=\"false\" checked=\"checked\" onclick=\"changeNull('equals', false)\"> false\n                </label>\n                <label>\n                    <input type=\"radio\" name=\"equals\" value=\"true\" onclick=\"changeNull('equals', true)\"> true\n                </label>\n            </div>\n        </div>\n\n        <div class=\"configuration-option\">\n            <div><strong>lessThan</strong></div>\n            <div>\n                <label>\n                    <input type=\"radio\" name=\"lessThan\" value=\"false\" checked=\"checked\" onclick=\"changeNull('lessThan', false)\"> false\n                </label>\n                <label>\n                    <input type=\"radio\" name=\"lessThan\" value=\"true\" onclick=\"changeNull('lessThan', true)\"> true\n                </label>\n            </div>\n        </div>\n\n        <div class=\"configuration-option\">\n            <div><strong>greaterThan</strong></div>\n            <div>\n                <label>\n                    <input type=\"radio\" name=\"greaterThan\" value=\"false\" checked=\"checked\" onclick=\"changeNull('greaterThan', false)\"> false\n                </label>\n                <label>\n                    <input type=\"radio\" name=\"greaterThan\" value=\"true\" onclick=\"changeNull('greaterThan', true)\"> true\n                </label>\n            </div>\n        </div>\n\n        <div class=\"configuration-option\">\n            <div><strong>inRange</strong></div>\n            <div>\n                <label>\n                    <input type=\"radio\" name=\"inRange\" value=\"false\" checked=\"checked\" onclick=\"changeNull('inRange', false)\"> false\n                </label>\n                <label>\n                    <input type=\"radio\" name=\"inRange\" value=\"true\" onclick=\"changeNull('inRange', true)\"> true\n                </label>\n            </div>\n        </div>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "88%",
    "theme": "ag-theme-alpine",
    "exampleHeight": 310
  }
}
