{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'athlete', minWidth: 180 },\n    { field: 'age' },\n    { field: 'country', minWidth: 150 },\n    { headerName: 'Group', valueGetter: 'data.country.charAt(0)' },\n    { field: 'year' },\n    { field: 'date', minWidth: 150 },\n    { field: 'sport', minWidth: 180 },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 100,\n    sortable: true,\n    filter: true,\n}"
    },
    { "name": "pagination", "value": "true" },
    { "name": "paginationAutoPageSize", "value": "true" }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    sortable: true,\n    filter: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'athlete',\n    minWidth: 180 },\n    { field: 'age' },\n    {\n        field: 'country',\n    minWidth: 150 },\n    {\n        headerName: 'Group',\n    valueGetter: 'data.country.charAt(0)' },\n    { field: 'year' },\n    {\n        field: 'date',\n    minWidth: 150 },\n    {\n        field: 'sport',\n    minWidth: 180 },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "getDisplayedRowAtIndex",
      "params": "",
      "body": "function getDisplayedRowAtIndex() {\n    var rowNode = this.gridApi.getDisplayedRowAtIndex(0);\n    console.log('getDisplayedRowAtIndex(0) => ' + rowNode.data.athlete + ' ' + rowNode.data.year);\n}"
    },
    {
      "name": "getDisplayedRowCount",
      "params": "",
      "body": "function getDisplayedRowCount() {\n    var count = this.gridApi.getDisplayedRowCount();\n    console.log('getDisplayedRowCount() => ' + count);\n}"
    },
    {
      "name": "printAllDisplayedRows",
      "params": "",
      "body": "function printAllDisplayedRows() {\n    var count = this.gridApi.getDisplayedRowCount();\n    console.log('## printAllDisplayedRows');\n    for (var i = 0; i < count; i++) {\n        var rowNode = this.gridApi.getDisplayedRowAtIndex(i);\n        console.log('row ' + i + ' is ' + rowNode.data.athlete);\n    }\n}"
    },
    {
      "name": "printPageDisplayedRows",
      "params": "",
      "body": "function printPageDisplayedRows() {\n    var rowCount = this.gridApi.getDisplayedRowCount();\n    var lastGridIndex = rowCount - 1;\n    var currentPage = this.gridApi.paginationGetCurrentPage();\n    var pageSize = this.gridApi.paginationGetPageSize();\n    var startPageIndex = currentPage * pageSize;\n    var endPageIndex = (currentPage + 1) * pageSize - 1;\n    if (endPageIndex > lastGridIndex) {\n        endPageIndex = lastGridIndex;\n    }\n    console.log('## printPageDisplayedRows');\n    for (var i = startPageIndex; i <= endPageIndex; i++) {\n        var rowNode = this.gridApi.getDisplayedRowAtIndex(i);\n        console.log('row ' + i + ' is ' + rowNode.data.athlete);\n    }\n}"
    }
  ],
  "utils": [],
  "callbackDependencies": {
    "getDisplayedRowAtIndex": ["gridOptions"],
    "getDisplayedRowCount": ["gridOptions"],
    "printAllDisplayedRows": ["gridOptions"],
    "printPageDisplayedRows": ["gridOptions"]
  },
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
    "callback": "{\n    params.api.setRowData(data.slice(0, 100));\n}"
  },
  "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px;\">\n        <button onclick=\"getDisplayedRowAtIndex()\">Get Displayed Row 0</button>\n        <button onclick=\"getDisplayedRowCount()\">Get Displayed Row Count</button>\n        <button onclick=\"printAllDisplayedRows()\">Print All Displayed Rows</button>\n        <button onclick=\"printPageDisplayedRows()\">Print Page Displayed Rows</button>\n    </div>\n    \n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine"
  }
}
