{
  "eventHandlers": [
    {
      "name": "rowDragMove",
      "handlerName": "onRowDragMove",
      "handler": "function onRowDragMove(event) {\n    var movingNode = event.node;\n    var overNode = event.overNode;\n    // find out what country group we are hovering over\n    var groupCountry;\n    if (overNode.group) {\n        // if over a group, we take the group key (which will be the\n        // country as we are grouping by country)\n        groupCountry = overNode.key;\n    }\n    else {\n        // if over a non-group, we take the country directly\n        groupCountry = overNode.data.country;\n    }\n    var needToChangeParent = movingNode.data.country !== groupCountry;\n    if (needToChangeParent) {\n        var movingData = movingNode.data;\n        movingData.country = groupCountry;\n        this.gridApi.applyTransaction({\n            update: [movingData],\n        });\n        this.gridApi.clearFocusedCell();\n    }\n}"
    }
  ],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'athlete', rowDrag: rowDrag },\n    { field: 'country', rowGroup: true },\n    { field: 'year', width: 100 },\n    { field: 'date' },\n    { field: 'sport' },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    width: 170,\n    sortable: true,\n    filter: true,\n}"
    },
    { "name": "animateRows", "value": "true" },
    { "name": "groupDefaultExpanded", "value": "1" }
  ],
  "components": [],
  "defaultColDef": "{\n    width: 170,\n    sortable: true,\n    filter: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'athlete',\n    rowDrag: 'AG_LITERAL_rowDrag' },\n    {\n        field: 'country',\n    rowGroup: true },\n    {\n        field: 'year',\n    width: 100 },\n    { field: 'date' },\n    { field: 'sport' },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "var rowDrag = function (params) {\n    // only rows that are NOT groups should be draggable\n    return !params.node.group;\n};"
  ],
  "callbackDependencies": { "onRowDragMove": ["gridOptions"] },
  "onGridReady": "{\n    params.api.setRowData(getData());\n}",
  "template": "GRID_TEMPLATE_PLACEHOLDER\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 650,
    "modules": ["clientside", "rowgrouping", "setfilter", "menu", "columnpanel"]
  }
}
