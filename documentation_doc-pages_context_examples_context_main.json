{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { headerName: 'Product', field: 'product' },\n    { headerName: 'Currency', field: 'price.currency' },\n    {\n        headerName: 'Price Local',\n        field: 'price',\n        cellStyle: { 'text-align': 'right' },\n        cellRenderer: 'currencyCellRenderer',\n    },\n    {\n        headerName: 'Report Price',\n        field: 'price',\n        cellStyle: { 'text-align': 'right' },\n        cellRenderer: 'currencyCellRenderer',\n        valueGetter: reportingCurrencyValueGetter,\n        headerValueGetter: 'ctx.reportingCurrency',\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    resizable: true,\n}"
    },
    { "name": "rowData", "value": "getData()" },
    { "name": "context", "value": "{\n    reportingCurrency: 'EUR',\n}" },
    {
      "name": "components",
      "value": "{\n    currencyCellRenderer: getCurrencyCellRenderer(),\n}"
    }
  ],
  "components": [],
  "defaultColDef": null,
  "globalComponents": [],
  "parsedColDefs": "",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "currencyChanged",
      "params": "",
      "body": "function currencyChanged() {\n    var value = (document.getElementById('currency')).value;\n    gridOptions.context = { reportingCurrency: value };\n    this.gridApi.refreshCells();\n    this.gridApi.refreshHeader();\n}"
    }
  ],
  "utils": [
    "function reportingCurrencyValueGetter(params) {\n    // Rates taken from google at time of writing\n    var exchangeRates = {\n        EUR: {\n            GBP: 0.72,\n            USD: 1.08,\n        },\n        GBP: {\n            EUR: 1.29,\n            USD: 1.5,\n        },\n        USD: {\n            GBP: 0.67,\n            EUR: 0.93,\n        },\n    };\n    var price = params.data[params.colDef.field];\n    var reportingCurrency = params.context.reportingCurrency;\n    var fxRateSet = exchangeRates[reportingCurrency];\n    var fxRate = fxRateSet[price.currency];\n    var priceInReportingCurrency;\n    if (fxRate) {\n        priceInReportingCurrency = price.amount * fxRate;\n    }\n    else {\n        priceInReportingCurrency = price.amount;\n    }\n    var result = {\n        currency: reportingCurrency,\n        amount: priceInReportingCurrency,\n    };\n    return result;\n}",
    "function getCurrencyCellRenderer() {\n    var gbpFormatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'GBP',\n        minimumFractionDigits: 2,\n    });\n    var eurFormatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'EUR',\n        minimumFractionDigits: 2,\n    });\n    var usdFormatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: 2,\n    });\n    function currencyCellRenderer(params) {\n        switch (params.value.currency) {\n            case 'EUR':\n                return eurFormatter.format(params.value.amount);\n            case 'USD':\n                return usdFormatter.format(params.value.amount);\n            case 'GBP':\n                return gbpFormatter.format(params.value.amount);\n        }\n    }\n    return currencyCellRenderer;\n}",
    "function getData() {\n    return [\n        { product: 'Product 1', price: { currency: 'EUR', amount: 644 } },\n        { product: 'Product 2', price: { currency: 'EUR', amount: 354 } },\n        { product: 'Product 3', price: { currency: 'GBP', amount: 429 } },\n        { product: 'Product 4', price: { currency: 'GBP', amount: 143 } },\n        { product: 'Product 5', price: { currency: 'USD', amount: 345 } },\n        { product: 'Product 6', price: { currency: 'USD', amount: 982 } },\n    ];\n}"
  ],
  "callbackDependencies": {
    "getCurrencyCellRenderer": ["Intl", "currencyCellRenderer", "params"],
    "currencyChanged": ["gridOptions"]
  },
  "template": "<div style=\"height: 10%;\">\n\n    <select id=\"currency\" onchange=\"currencyChanged()\">\n        <option value=\"EUR\" selected=\"\">EUR</option>\n        <option value=\"GBP\">GBP</option>\n        <option value=\"USD\">USD</option>\n    </select>\n\n</div>\nGRID_TEMPLATE_PLACEHOLDER\n\n",
  "gridSettings": {
    "width": "100%",
    "height": "90%",
    "theme": "ag-theme-alpine"
  }
}
