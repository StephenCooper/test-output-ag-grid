{
  "eventHandlers": [
    {
      "name": "rowEditingStarted",
      "handlerName": "onRowEditingStarted",
      "handler": "function onRowEditingStarted(event) {\n    console.log('never called - not doing row editing');\n}"
    },
    {
      "name": "rowEditingStopped",
      "handlerName": "onRowEditingStopped",
      "handler": "function onRowEditingStopped(event) {\n    console.log('never called - not doing row editing');\n}"
    },
    {
      "name": "cellEditingStarted",
      "handlerName": "onCellEditingStarted",
      "handler": "function onCellEditingStarted(event) {\n    console.log('cellEditingStarted');\n}"
    },
    {
      "name": "cellEditingStopped",
      "handlerName": "onCellEditingStopped",
      "handler": "function onCellEditingStopped(event) {\n    console.log('cellEditingStopped');\n}"
    }
  ],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    {\n        field: 'value',\n        editable: true,\n        cellEditorSelector: cellEditorSelector,\n    },\n    { field: 'type' },\n]"
    },
    { "name": "defaultColDef", "value": "{\n    flex: 1,\n}" },
    { "name": "rowData", "value": "getData()" },
    {
      "name": "components",
      "value": "{\n    numericCellEditor: NumericCellEditor,\n    moodEditor: MoodEditor,\n}"
    }
  ],
  "components": [
    { "name": "numericCellEditor", "value": "NumericCellEditor" },
    { "name": "moodEditor", "value": "MoodEditor" }
  ],
  "defaultColDef": "{\n    flex: 1,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'value',\n    editable: true,\n    cellEditorSelector: 'AG_LITERAL_cellEditorSelector' },\n    { field: 'type' }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "function cellEditorSelector(params) {\n    if (params.data.type === 'age') {\n        return {\n            component: 'numericCellEditor',\n        };\n    }\n    if (params.data.type === 'gender') {\n        return {\n            component: 'agRichSelectCellEditor',\n            params: {\n                values: ['Male', 'Female'],\n            },\n        };\n    }\n    if (params.data.type === 'mood') {\n        return {\n            component: 'moodEditor',\n        };\n    }\n    return undefined;\n}"
  ],
  "callbackDependencies": {},
  "template": "GRID_TEMPLATE_PLACEHOLDER",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 450
  }
}
