{
  "eventHandlers": [
    {
      "name": "firstDataRendered",
      "handlerName": "onFirstDataRendered",
      "handler": "function onFirstDataRendered(params) {\n    ;\n    ((params.api.getToolPanelInstance('filters'))).expandFilters();\n}"
    }
  ],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    {\n        headerName: 'No Cell Renderer',\n        field: 'country',\n        cellRenderer: countryCellRenderer,\n        filter: 'agSetColumnFilter',\n        filterParams: {\n        // no cell renderer!\n        },\n    },\n    {\n        headerName: 'With Cell Renderers',\n        field: 'country',\n        cellRenderer: countryCellRenderer,\n        filter: 'agSetColumnFilter',\n        filterParams: countryFilterParams,\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 225,\n    resizable: true,\n    floatingFilter: true,\n}"
    },
    { "name": "sideBar", "value": "'filters'" }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 225,\n    resizable: true,\n    floatingFilter: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        headerName: 'No Cell Renderer',\n    field: 'country',\n    cellRenderer: 'AG_LITERAL_countryCellRenderer',\n    filter: 'agSetColumnFilter',\n    filterParams : {\n    \n } },\n    {\n        headerName: 'With Cell Renderers',\n    field: 'country',\n    cellRenderer: 'AG_LITERAL_countryCellRenderer',\n    filter: 'agSetColumnFilter',\n    filterParams: 'AG_LITERAL_countryFilterParams' }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "printFilterModel",
      "params": "",
      "body": "function printFilterModel() {\n    var filterModel = this.gridApi.getFilterModel();\n    console.log(filterModel);\n}"
    }
  ],
  "utils": [
    "var countryFilterParams = {\n    cellRenderer: countryCellRenderer,\n};",
    "function countryCellRenderer(params) {\n    if (!params.value || params.value === '(Select All)') {\n        return params.value;\n    }\n    var url = 'https://flags.fmcdn.net/data/flags/mini/' +\n        COUNTRY_CODES[params.value] +\n        '.png';\n    var flagImage = '<img class=\"flag\" border=\"0\" width=\"15\" height=\"10\" src=\"' + url + '\">';\n    return flagImage + ' ' + params.value;\n}",
    "var COUNTRY_CODES = {\n    Ireland: 'ie',\n    Luxembourg: 'lu',\n    Belgium: 'be',\n    Spain: 'es',\n    France: 'fr',\n    Germany: 'de',\n    Sweden: 'se',\n    Italy: 'it',\n    Greece: 'gr',\n    Iceland: 'is',\n    Portugal: 'pt',\n    Malta: 'mt',\n    Norway: 'no',\n    Brazil: 'br',\n    Argentina: 'ar',\n    Colombia: 'co',\n    Peru: 'pe',\n    Venezuela: 've',\n    Uruguay: 'uy',\n};"
  ],
  "callbackDependencies": { "printFilterModel": ["gridOptions"] },
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
    "callback": "{\n    // only return data that has corresponding country codes\n    var dataWithFlags = data.filter(function (d) {\n        return COUNTRY_CODES[d.country];\n    });\n    params.api.setRowData(dataWithFlags);\n}"
  },
  "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px;\">\n        <button onclick=\"printFilterModel()\">Print Filter Model</button>\n    </div>\n\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 745,
    "modules": ["clientside", "setfilter", "menu", "columnpanel", "filterpanel"]
  }
}
