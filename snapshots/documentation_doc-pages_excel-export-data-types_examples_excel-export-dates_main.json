{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    {\n        field: 'date',\n        headerName: 'ISO Format',\n        cellClass: 'dateISO',\n        minWidth: 150,\n    },\n    {\n        field: 'date',\n        headerName: 'dd/mm/yy',\n        cellClass: 'dateUK',\n        valueFormatter: function (params) {\n            var date = new Date(params.value);\n            var day = date.getDate().toString().padStart(2, '0');\n            var month = (date.getMonth() + 1).toString().padStart(2, '0');\n            var year = date.getFullYear().toString().substr(-2);\n            return day + '/' + month + '/' + year;\n        },\n    },\n    {\n        field: 'date',\n        headerName: 'mm/dd/yy',\n        cellClass: 'dateUS',\n        valueFormatter: function (params) {\n            var date = new Date(params.value);\n            var day = date.getDate().toString().padStart(2, '0');\n            var month = (date.getMonth() + 1).toString().padStart(2, '0');\n            var year = date.getFullYear().toString().substr(-2);\n            return month + '/' + day + '/' + year;\n        },\n    },\n    {\n        field: 'date',\n        headerName: 'dd/mm/yyy h:mm:ss AM/PM',\n        cellClass: 'dateLong',\n        minWidth: 150,\n        valueFormatter: function (params) {\n            var date = new Date(params.value);\n            var day = date.getDate().toString().padStart(2, '0');\n            var month = (date.getMonth() + 1).toString().padStart(2, '0');\n            var year = date.getFullYear().toString();\n            var hourNum = date.getHours() % 12;\n            var hour = (hourNum === 0 ? 12 : hourNum).toString().padStart(2, '0');\n            var min = date.getMinutes().toString().padStart(2, '0');\n            var sec = date.getSeconds().toString().padStart(2, '0');\n            var amPM = date.getHours() < 12 ? 'AM' : 'PM';\n            return (day +\n                '/' +\n                month +\n                '/' +\n                year +\n                ' ' +\n                hour +\n                ':' +\n                min +\n                ':' +\n                sec +\n                ' ' +\n                amPM);\n        },\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 100,\n    resizable: true,\n}"
    },
    {
      "name": "excelStyles",
      "value": "[\n    {\n        id: 'dateISO',\n        dataType: 'DateTime',\n        numberFormat: {\n            format: 'yyy-mm-ddThh:mm:ss',\n        },\n    },\n    {\n        id: 'dateUK',\n        dataType: 'DateTime',\n        numberFormat: {\n            format: 'dd/mm/yy',\n        },\n    },\n    {\n        id: 'dateUS',\n        dataType: 'DateTime',\n        numberFormat: {\n            format: 'mm/dd/yy',\n        },\n    },\n    {\n        id: 'dateLong',\n        dataType: 'DateTime',\n        numberFormat: {\n            format: 'dd/mm/yyy h:mm:ss AM/PM',\n        },\n    },\n]"
    },
    {
      "name": "rowData",
      "value": "[\n    { date: '2020-05-30T10:01:00' },\n    { date: '2015-04-21T16:30:00' },\n    { date: '2010-02-19T12:02:00' },\n    { date: '1995-10-04T03:27:00' },\n]"
    }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'date',\n    headerName: 'ISO Format',\n    cellClass: 'dateISO',\n    minWidth: 150 },\n    {\n        field: 'date',\n    headerName: 'dd/mm/yy',\n    cellClass: 'dateUK',\n    valueFormatter: \"AG_FUNCTION_function (params) {\\n    var date = new Date(params.value);\\n    var day = date.getDate().toString().padStart(2, \\'0\\');\\n    var month = (date.getMonth() + 1).toString().padStart(2, \\'0\\');\\n    var year = date.getFullYear().toString().substr(-2);\\n    return day + \\'/\\' + month + \\'/\\' + year;\\n}\" },\n    {\n        field: 'date',\n    headerName: 'mm/dd/yy',\n    cellClass: 'dateUS',\n    valueFormatter: \"AG_FUNCTION_function (params) {\\n    var date = new Date(params.value);\\n    var day = date.getDate().toString().padStart(2, \\'0\\');\\n    var month = (date.getMonth() + 1).toString().padStart(2, \\'0\\');\\n    var year = date.getFullYear().toString().substr(-2);\\n    return month + \\'/\\' + day + \\'/\\' + year;\\n}\" },\n    {\n        field: 'date',\n    headerName: 'dd/mm/yyy h:mm:ss AM/PM',\n    cellClass: 'dateLong',\n    minWidth: 150,\n    valueFormatter: \"AG_FUNCTION_function (params) {\\n    var date = new Date(params.value);\\n    var day = date.getDate().toString().padStart(2, \\'0\\');\\n    var month = (date.getMonth() + 1).toString().padStart(2, \\'0\\');\\n    var year = date.getFullYear().toString();\\n    var hourNum = date.getHours() % 12;\\n    var hour = (hourNum === 0 ? 12 : hourNum).toString().padStart(2, \\'0\\');\\n    var min = date.getMinutes().toString().padStart(2, \\'0\\');\\n    var sec = date.getSeconds().toString().padStart(2, \\'0\\');\\n    var amPM = date.getHours() < 12 ? \\'AM\\' : \\'PM\\';\\n    return (day +\\n        \\'/\\' +\\n        month +\\n        \\'/\\' +\\n        year +\\n        \\' \\' +\\n        hour +\\n        \\':\\' +\\n        min +\\n        \\':\\' +\\n        sec +\\n        \\' \\' +\\n        amPM);\\n}\" }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "onBtnExportDataAsExcel",
      "params": "",
      "body": "function onBtnExportDataAsExcel() {\n    this.gridApi.exportDataAsExcel();\n}"
    }
  ],
  "utils": [],
  "callbackDependencies": { "onBtnExportDataAsExcel": ["gridOptions"] },
  "template": "\n\n<div class=\"page-wrapper\">\n    <div>\n        <button onclick=\"onBtnExportDataAsExcel()\" style=\"margin-bottom: 5px; font-weight: bold;\">Export to Excel</button>\n    </div>\n\n    <div class=\"grid-wrapper\">\n        GRID_TEMPLATE_PLACEHOLDER\n    </div>\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true
  }
}
