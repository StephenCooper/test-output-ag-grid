{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    // this col shows the row index, doesn't use any data from the row\n    {\n        headerName: '#',\n        maxWidth: 80,\n        cellRenderer: function (params) {\n            return '' + params.rowIndex;\n        },\n    },\n    { field: 'code', maxWidth: 90 },\n    { field: 'name', minWidth: 220 },\n    {\n        field: 'bid',\n        cellClass: 'cell-number',\n        valueFormatter: numberFormatter,\n        cellRenderer: 'agAnimateShowChangeCellRenderer',\n    },\n    {\n        field: 'mid',\n        cellClass: 'cell-number',\n        valueFormatter: numberFormatter,\n        cellRenderer: 'agAnimateShowChangeCellRenderer',\n    },\n    {\n        field: 'ask',\n        cellClass: 'cell-number',\n        valueFormatter: numberFormatter,\n        cellRenderer: 'agAnimateShowChangeCellRenderer',\n    },\n    {\n        field: 'volume',\n        cellClass: 'cell-number',\n        cellRenderer: 'agAnimateSlideCellRenderer',\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 140,\n    resizable: true,\n}"
    },
    { "name": "enableRangeSelection", "value": "true" },
    { "name": "rowModelType", "value": "'viewport'" },
    { "name": "pagination", "value": "true" },
    { "name": "paginationAutoPageSize", "value": "true" },
    { "name": "viewportRowModelPageSize", "value": "1" },
    { "name": "viewportRowModelBufferSize", "value": "0" },
    {
      "name": "getRowNodeId",
      "value": "function (data) {\n    // the code is unique, so perfect for the id\n    return data.code;\n}"
    },
    { "name": "debug", "value": "true" }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 140,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        headerName: '#',\n    maxWidth: 80,\n    cellRenderer: \"AG_FUNCTION_function (params) {\\n    return \\'\\' + params.rowIndex;\\n}\" },\n    {\n        field: 'code',\n    maxWidth: 90 },\n    {\n        field: 'name',\n    minWidth: 220 },\n    {\n        field: 'bid',\n    cellClass: 'cell-number',\n    valueFormatter: 'AG_LITERAL_numberFormatter',\n    cellRenderer: 'agAnimateShowChangeCellRenderer' },\n    {\n        field: 'mid',\n    cellClass: 'cell-number',\n    valueFormatter: 'AG_LITERAL_numberFormatter',\n    cellRenderer: 'agAnimateShowChangeCellRenderer' },\n    {\n        field: 'ask',\n    cellClass: 'cell-number',\n    valueFormatter: 'AG_LITERAL_numberFormatter',\n    cellRenderer: 'agAnimateShowChangeCellRenderer' },\n    {\n        field: 'volume',\n    cellClass: 'cell-number',\n    cellRenderer: 'agAnimateSlideCellRenderer' }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "function numberFormatter(params) {\n    if (typeof params.value === 'number') {\n        return params.value.toFixed(2);\n    }\n    else {\n        return params.value;\n    }\n}"
  ],
  "callbackDependencies": {},
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/stocks.json'",
    "callback": "{\n    // set up a mock server - real code will not do this, it will contact your\n    // real server to get what it needs\n    var mockServer = createMockServer();\n    mockServer.init(data);\n    var viewportDatasource = createViewportDatasource(mockServer);\n    params.api.setViewportDatasource(viewportDatasource);\n    // put the 'size cols to fit' into a timeout, so that the scroll is taken into consideration\n    setTimeout(function () {\n        params.api.sizeColumnsToFit();\n    }, 100);\n}"
  },
  "template": "\n\nGRID_TEMPLATE_PLACEHOLDER\n\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 570
  }
}
