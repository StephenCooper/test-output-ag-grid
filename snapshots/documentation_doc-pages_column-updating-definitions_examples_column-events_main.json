{
  "eventHandlers": [
    {
      "name": "sortChanged",
      "handlerName": "onSortChanged",
      "handler": "function onSortChanged(e) {\n    console.log('Event Sort Changed', e);\n}"
    },
    {
      "name": "columnResized",
      "handlerName": "onColumnResized",
      "handler": "function onColumnResized(e) {\n    console.log('Event Column Resized', e);\n}"
    },
    {
      "name": "columnVisible",
      "handlerName": "onColumnVisible",
      "handler": "function onColumnVisible(e) {\n    console.log('Event Column Visible', e);\n}"
    },
    {
      "name": "columnPivotChanged",
      "handlerName": "onColumnPivotChanged",
      "handler": "function onColumnPivotChanged(e) {\n    console.log('Event Pivot Changed', e);\n}"
    },
    {
      "name": "columnRowGroupChanged",
      "handlerName": "onColumnRowGroupChanged",
      "handler": "function onColumnRowGroupChanged(e) {\n    console.log('Event Row Group Changed', e);\n}"
    },
    {
      "name": "columnValueChanged",
      "handlerName": "onColumnValueChanged",
      "handler": "function onColumnValueChanged(e) {\n    console.log('Event Value Changed', e);\n}"
    },
    {
      "name": "columnMoved",
      "handlerName": "onColumnMoved",
      "handler": "function onColumnMoved(e) {\n    console.log('Event Column Moved', e);\n}"
    },
    {
      "name": "columnPinned",
      "handlerName": "onColumnPinned",
      "handler": "function onColumnPinned(e) {\n    console.log('Event Column Pinned', e);\n}"
    }
  ],
  "properties": [
    {
      "name": "defaultColDef",
      "value": "{\n    sortable: true,\n    resizable: true,\n    width: 150,\n    enableRowGroup: true,\n    enablePivot: true,\n    enableValue: true,\n}"
    },
    { "name": "columnDefs", "value": "getColumnDefs()" },
    { "name": "rowData", "value": "null" }
  ],
  "components": [],
  "defaultColDef": null,
  "globalComponents": [],
  "parsedColDefs": "",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "onBtSortOn",
      "params": "",
      "body": "function onBtSortOn() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        if (colDef.field === 'age') {\n            colDef.sort = 'desc';\n        }\n        if (colDef.field === 'athlete') {\n            colDef.sort = 'asc';\n        }\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtSortOff",
      "params": "",
      "body": "function onBtSortOff() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        colDef.sort = null;\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtWidthNarrow",
      "params": "",
      "body": "function onBtWidthNarrow() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        if (colDef.field === 'age' || colDef.field === 'athlete') {\n            colDef.width = 100;\n        }\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtWidthNormal",
      "params": "",
      "body": "function onBtWidthNormal() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        colDef.width = 200;\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtHide",
      "params": "",
      "body": "function onBtHide() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        if (colDef.field === 'age' || colDef.field === 'athlete') {\n            colDef.hide = true;\n        }\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtShow",
      "params": "",
      "body": "function onBtShow() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        colDef.hide = false;\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtPivotOn",
      "params": "",
      "body": "function onBtPivotOn() {\n    this.gridColumnApi.setPivotMode(true);\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        if (colDef.field === 'country') {\n            colDef.pivot = true;\n        }\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtPivotOff",
      "params": "",
      "body": "function onBtPivotOff() {\n    this.gridColumnApi.setPivotMode(false);\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        colDef.pivot = false;\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtRowGroupOn",
      "params": "",
      "body": "function onBtRowGroupOn() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        if (colDef.field === 'sport') {\n            colDef.rowGroup = true;\n        }\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtRowGroupOff",
      "params": "",
      "body": "function onBtRowGroupOff() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        colDef.rowGroup = false;\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtAggFuncOn",
      "params": "",
      "body": "function onBtAggFuncOn() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        if (colDef.field === 'gold' ||\n            colDef.field === 'silver' ||\n            colDef.field === 'bronze') {\n            colDef.aggFunc = 'sum';\n        }\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtAggFuncOff",
      "params": "",
      "body": "function onBtAggFuncOff() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        colDef.aggFunc = null;\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtPinnedOn",
      "params": "",
      "body": "function onBtPinnedOn() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        if (colDef.field === 'athlete') {\n            colDef.pinned = 'left';\n        }\n        if (colDef.field === 'age') {\n            colDef.pinned = 'right';\n        }\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    },
    {
      "name": "onBtPinnedOff",
      "params": "",
      "body": "function onBtPinnedOff() {\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        colDef.pinned = null;\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    }
  ],
  "utils": [
    "function getColumnDefs() {\n    return [\n        { field: 'athlete' },\n        { field: 'age' },\n        { field: 'country' },\n        { field: 'sport' },\n        { field: 'gold' },\n        { field: 'silver' },\n        { field: 'bronze' },\n    ];\n}"
  ],
  "callbackDependencies": {
    "onBtSortOn": ["getColumnDefs", "gridOptions"],
    "onBtSortOff": ["getColumnDefs", "gridOptions"],
    "onBtWidthNarrow": ["getColumnDefs", "gridOptions"],
    "onBtWidthNormal": ["getColumnDefs", "gridOptions"],
    "onBtHide": ["getColumnDefs", "gridOptions"],
    "onBtShow": ["getColumnDefs", "gridOptions"],
    "onBtPivotOn": ["gridOptions", "getColumnDefs"],
    "onBtPivotOff": ["gridOptions", "getColumnDefs"],
    "onBtRowGroupOn": ["getColumnDefs", "gridOptions"],
    "onBtRowGroupOff": ["getColumnDefs", "gridOptions"],
    "onBtAggFuncOn": ["getColumnDefs", "gridOptions"],
    "onBtAggFuncOff": ["getColumnDefs", "gridOptions"],
    "onBtPinnedOn": ["getColumnDefs", "gridOptions"],
    "onBtPinnedOff": ["getColumnDefs", "gridOptions"]
  },
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
    "callback": "params.api.setRowData(data)"
  },
  "template": "<div class=\"test-container\">\n    <div class=\"test-header\">\n\n        <div class=\"test-button-row\">\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtSortOn()\">Sort On</button>\n                <br />\n                <button onclick=\"onBtSortOff()\">Sort Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtWidthNarrow()\">Width Narrow</button>\n                <br />\n                <button onclick=\"onBtWidthNormal()\">Width Normal</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtHide()\">Hide Cols</button>\n                <br />\n                <button onclick=\"onBtShow()\">Show Cols</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtPivotOn()\">Pivot On</button>\n                <br />\n                <button onclick=\"onBtPivotOff()\">Pivot Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtRowGroupOn()\">Row Group On</button>\n                <br />\n                <button onclick=\"onBtRowGroupOff()\">Row Group Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtAggFuncOn()\">Agg Func On</button>\n                <br />\n                <button onclick=\"onBtAggFuncOff()\">Agg Func Off</button>\n            </div>\n            <div class=\"test-button-group\">\n                <button onclick=\"onBtPinnedOn()\">Pinned On</button>\n                <br />\n                <button onclick=\"onBtPinnedOff()\">Pinned Off</button>\n            </div>\n        </div>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true
  }
}
