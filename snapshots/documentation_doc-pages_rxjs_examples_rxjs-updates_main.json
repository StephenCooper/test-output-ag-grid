{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'code', maxWidth: 90 },\n    { field: 'name', minWidth: 200 },\n    {\n        field: 'bid',\n        cellClass: 'cell-number',\n        valueFormatter: numberFormatter,\n        cellRenderer: 'agAnimateShowChangeCellRenderer',\n    },\n    {\n        field: 'mid',\n        cellClass: 'cell-number',\n        valueFormatter: numberFormatter,\n        cellRenderer: 'agAnimateShowChangeCellRenderer',\n    },\n    {\n        field: 'ask',\n        cellClass: 'cell-number',\n        valueFormatter: numberFormatter,\n        cellRenderer: 'agAnimateShowChangeCellRenderer',\n    },\n    {\n        field: 'volume',\n        cellClass: 'cell-number',\n        cellRenderer: 'agAnimateSlideCellRenderer',\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 100,\n    resizable: true,\n}"
    },
    { "name": "enableRangeSelection", "value": "true" },
    {
      "name": "getRowNodeId",
      "value": "function (data) {\n    return data.code;\n}"
    }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'code',\n    maxWidth: 90 },\n    {\n        field: 'name',\n    minWidth: 200 },\n    {\n        field: 'bid',\n    cellClass: 'cell-number',\n    valueFormatter: 'AG_LITERAL_numberFormatter',\n    cellRenderer: 'agAnimateShowChangeCellRenderer' },\n    {\n        field: 'mid',\n    cellClass: 'cell-number',\n    valueFormatter: 'AG_LITERAL_numberFormatter',\n    cellRenderer: 'agAnimateShowChangeCellRenderer' },\n    {\n        field: 'ask',\n    cellClass: 'cell-number',\n    valueFormatter: 'AG_LITERAL_numberFormatter',\n    cellRenderer: 'agAnimateShowChangeCellRenderer' },\n    {\n        field: 'volume',\n    cellClass: 'cell-number',\n    cellRenderer: 'agAnimateSlideCellRenderer' }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "function numberFormatter(params) {\n    if (typeof params.value === 'number') {\n        return params.value.toFixed(2);\n    }\n    return params.value;\n}"
  ],
  "callbackDependencies": {},
  "onGridReady": "{\n    var mockServer = createMockServer(), initialLoad$ = mockServer.initialLoad(), updates$ = mockServer.byRowupdates();\n    initialLoad$.subscribe(function (rowData) {\n        // the initial full set of data\n        // note that we don't need to un-subscribe here as it's a one off data load\n        params.api.setRowData(rowData);\n        // now listen for updates\n        // we process the updates with a transaction - this ensures that only the changes\n        // rows will get re-rendered, improving performance\n        updates$.subscribe(function (updates) {\n            return params.api.applyTransaction({ update: updates });\n        });\n    });\n}",
  "template": "GRID_TEMPLATE_PLACEHOLDER\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "extras": ["lodash", "rxjs", "bluebirdjs"],
    "modules": ["clientside", "rowgrouping"]
  }
}
