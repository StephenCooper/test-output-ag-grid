{
  "eventHandlers": [],
  "properties": [
    {
      "name": "rowData",
      "value": "[\n    { id: 'aa', make: 'Toyota', model: 'Celica', price: 35000 },\n    { id: 'bb', make: 'Ford', model: 'Mondeo', price: 32000 },\n    { id: 'cc', make: 'Porsche', model: 'Boxter', price: 72000 },\n    { id: 'dd', make: 'BMW', model: '5 Series', price: 59000 },\n    { id: 'ee', make: 'Dodge', model: 'Challanger', price: 35000 },\n    { id: 'ff', make: 'Mazda', model: 'MX5', price: 28000 },\n    { id: 'gg', make: 'Horse', model: 'Outside', price: 99000 },\n]"
    },
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'make' },\n    { field: 'model' },\n    { field: 'price', filter: 'agNumberColumnFilter' },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    editable: true,\n    sortable: true,\n    filter: true,\n}"
    },
    { "name": "animateRows", "value": "true" },
    {
      "name": "getRowNodeId",
      "value": "function (data) {\n    return data.id;\n}"
    }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    editable: true,\n    sortable: true,\n    filter: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{ field: 'make' },\n    { field: 'model' },\n    {\n        field: 'price',\n    filter: 'agNumberColumnFilter' }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "updateSort",
      "params": "",
      "body": "function updateSort() {\n    this.gridApi.refreshClientSideRowModel('sort');\n}"
    },
    {
      "name": "updateFilter",
      "params": "",
      "body": "function updateFilter() {\n    this.gridApi.refreshClientSideRowModel('filter');\n}"
    },
    {
      "name": "setPriceOnToyota",
      "params": "",
      "body": "function setPriceOnToyota() {\n    var rowNode = this.gridApi.getRowNode('aa');\n    var newPrice = Math.floor(Math.random() * 100000);\n    rowNode.setDataValue('price', newPrice);\n}"
    },
    {
      "name": "setDataOnFord",
      "params": "",
      "body": "function setDataOnFord() {\n    var rowNode = this.gridApi.getRowNode('bb');\n    var newPrice = Math.floor(Math.random() * 100000);\n    var newModel = 'T-' + Math.floor(Math.random() * 1000);\n    var newData = {\n        id: 'bb',\n        make: 'Ford',\n        model: newModel,\n        price: newPrice,\n    };\n    rowNode.setData(newData);\n}"
    }
  ],
  "utils": [],
  "callbackDependencies": {
    "updateSort": ["gridOptions"],
    "updateFilter": ["gridOptions"],
    "setPriceOnToyota": ["gridOptions", "Math"],
    "setDataOnFord": ["gridOptions", "Math"]
  },
  "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 1rem;\">\n        <button onclick=\"setPriceOnToyota()\">Set Price on Toyota</button>\n        <button onclick=\"setDataOnFord()\">Set Data on Ford</button>\n        <button onclick=\"updateSort()\" style=\"margin-left: 15px\">Sort</button>\n        <button onclick=\"updateFilter()\">Filter</button>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine"
  }
}
