{
  "eventHandlers": [
    {
      "name": "firstDataRendered",
      "handlerName": "onFirstDataRendered",
      "handler": "function onFirstDataRendered() {\n    setValue('#undoInput', 0);\n    disable('#undoInput', true);\n    disable('#undoBtn', true);\n    setValue('#redoInput', 0);\n    disable('#redoInput', true);\n    disable('#redoBtn', true);\n}"
    },
    {
      "name": "cellValueChanged",
      "handlerName": "onCellValueChanged",
      "handler": "function onCellValueChanged(params) {\n    var undoSize = params.api.getCurrentUndoSize();\n    setValue('#undoInput', undoSize);\n    disable('#undoBtn', undoSize < 1);\n    var redoSize = params.api.getCurrentRedoSize();\n    setValue('#redoInput', redoSize);\n    disable('#redoBtn', redoSize < 1);\n}"
    }
  ],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'a' },\n    { field: 'b' },\n    { field: 'c' },\n    { field: 'd' },\n    { field: 'e' },\n    { field: 'f' },\n    { field: 'g' },\n    { field: 'h' },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    editable: true,\n}"
    },
    { "name": "rowData", "value": "getRows()" },
    { "name": "enableRangeSelection", "value": "true" },
    { "name": "enableFillHandle", "value": "true" },
    { "name": "undoRedoCellEditing", "value": "true" },
    { "name": "undoRedoCellEditingLimit", "value": "5" },
    { "name": "enableCellChangeFlash", "value": "true" }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    editable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{ field: 'a' },\n    { field: 'b' },\n    { field: 'c' },\n    { field: 'd' },\n    { field: 'e' },\n    { field: 'f' },\n    { field: 'g' },\n    { field: 'h' }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "undo",
      "params": "",
      "body": "function undo() {\n    this.gridApi.undoCellEditing();\n}"
    },
    {
      "name": "redo",
      "params": "",
      "body": "function redo() {\n    this.gridApi.redoCellEditing();\n}"
    }
  ],
  "utils": [
    "function disable(id, disabled) {\n    (document.querySelector(id)).disabled = disabled;\n}",
    "function setValue(id, value) {\n    (document.querySelector(id)).value = value;\n}",
    "function getRows() {\n    return Array.apply(null, Array(100)).map(function (_, i) {\n        return {\n            a: 'a-' + i,\n            b: 'b-' + i,\n            c: 'c-' + i,\n            d: 'd-' + i,\n            e: 'e-' + i,\n            f: 'f-' + i,\n            g: 'g-' + i,\n            h: 'h-' + i,\n        };\n    });\n}"
  ],
  "callbackDependencies": {
    "undo": ["gridOptions"],
    "redo": ["gridOptions"],
    "onFirstDataRendered": ["setValue", "disable"],
    "onCellValueChanged": ["setValue", "disable"],
    "getRows": ["Array"]
  },
  "template": "<div class=\"example-wrapper\">\n    <div>\n        <span class=\"button-group\">\n            <label>Available Undo's</label>\n            <input id=\"undoInput\" class=\"undo-redo-input\">\n            <label>Available Redo's</label>\n            <input id=\"redoInput\" class=\"undo-redo-input\">\n            <button id=\"undoBtn\" class=\"undo-btn\" onclick=\"undo()\">Undo</button>\n            <button id=\"redoBtn\" class=\"redo-btn\" onclick=\"redo()\">Redo</button>\n        </span>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 530,
    "modules": ["clientside", "range", "clipboard"]
  }
}
