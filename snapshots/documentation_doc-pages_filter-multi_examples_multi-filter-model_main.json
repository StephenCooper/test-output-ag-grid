{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'athlete', filter: 'agMultiColumnFilter' },\n    {\n        field: 'country',\n        filter: 'agMultiColumnFilter',\n        filterParams: {\n            filters: [\n                {\n                    filter: 'agTextColumnFilter',\n                    filterParams: {\n                        defaultOption: 'startsWith',\n                    },\n                },\n                {\n                    filter: 'agSetColumnFilter',\n                },\n            ],\n        },\n    },\n    {\n        field: 'gold',\n        filter: 'agMultiColumnFilter',\n        filterParams: {\n            filters: [\n                {\n                    filter: 'agNumberColumnFilter',\n                },\n                {\n                    filter: 'agSetColumnFilter',\n                },\n            ],\n        },\n    },\n    {\n        field: 'date',\n        filter: 'agMultiColumnFilter',\n        filterParams: dateFilterParams,\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 200,\n    resizable: true,\n    menuTabs: ['filterMenuTab'],\n}"
    }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 200,\n    resizable: true,\n    menuTabs: ['filterMenuTab'],\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'athlete',\n    filter: 'agMultiColumnFilter' },\n    {\n        field: 'country',\n    filter: 'agMultiColumnFilter',\n    filterParams : { filters: [\n    {\n        filter: 'agTextColumnFilter',\n        filterParams: {\n            defaultOption: 'startsWith',\n        },\n    },\n    {\n        filter: 'agSetColumnFilter',\n    },\n] } },\n    {\n        field: 'gold',\n    filter: 'agMultiColumnFilter',\n    filterParams : { filters: [\n    {\n        filter: 'agNumberColumnFilter',\n    },\n    {\n        filter: 'agSetColumnFilter',\n    },\n] } },\n    {\n        field: 'date',\n    filter: 'agMultiColumnFilter',\n    filterParams: 'AG_LITERAL_dateFilterParams' }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "printState",
      "params": "",
      "body": "function printState() {\n    var filterState = this.gridApi.getFilterModel();\n    console.log('Current filter state: ', filterState);\n}"
    },
    {
      "name": "saveState",
      "params": "",
      "body": "function saveState() {\n    savedFilterState = this.gridApi.getFilterModel();\n    console.log('Filter state saved');\n}"
    },
    {
      "name": "restoreState",
      "params": "",
      "body": "function restoreState() {\n    this.gridApi.setFilterModel(savedFilterState);\n    console.log('Filter state restored');\n}"
    },
    {
      "name": "resetState",
      "params": "",
      "body": "function resetState() {\n    this.gridApi.setFilterModel(null);\n    console.log('Filter state reset');\n}"
    }
  ],
  "utils": [
    "var dateFilterParams = {\n    filters: [\n        {\n            filter: 'agDateColumnFilter',\n            filterParams: {\n                comparator: function (filterDate, cellValue) {\n                    if (cellValue == null)\n                        return -1;\n                    return getDate(cellValue).getTime() - filterDate.getTime();\n                },\n            },\n        },\n        {\n            filter: 'agSetColumnFilter',\n            filterParams: {\n                comparator: function (a, b) {\n                    return getDate(a).getTime() - getDate(b).getTime();\n                },\n            },\n        },\n    ],\n};",
    "function getDate(value) {\n    var dateParts = value.split('/');\n    return new Date(Number(dateParts[2]), Number(dateParts[1]) - 1, Number(dateParts[0]));\n}",
    "var savedFilterState;"
  ],
  "callbackDependencies": {
    "getDate": ["Date", "Number"],
    "printState": ["gridOptions"],
    "saveState": ["savedFilterState", "gridOptions"],
    "restoreState": ["gridOptions"],
    "resetState": ["gridOptions"]
  },
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
    "callback": "params.api.setRowData(data)"
  },
  "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 1rem;\">\n        <button onclick=\"printState()\">Print State</button>\n        <button onclick=\"saveState()\">Save State</button>\n        <button onclick=\"restoreState()\">Restore State</button>\n        <button onclick=\"resetState()\">Reset State</button>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 639,
    "modules": ["clientside", "multifilter", "setfilter", "menu", "clipboard"]
  }
}
