{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'country', chartDataType: 'category' },\n    { field: 'sugar', chartDataType: 'series' },\n    { field: 'fat', chartDataType: 'series' },\n    { field: 'weight', chartDataType: 'series' },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    editable: true,\n    sortable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    resizable: true,\n}"
    },
    { "name": "rowData", "value": "getData()" },
    { "name": "enableRangeSelection", "value": "true" },
    { "name": "popupParent", "value": "document.body" },
    { "name": "enableCharts", "value": "true" },
    { "name": "createChartContainer", "value": null }
  ],
  "components": [],
  "defaultColDef": "{\n    editable: true,\n    sortable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'country',\n    chartDataType: 'category' },\n    {\n        field: 'sugar',\n    chartDataType: 'series' },\n    {\n        field: 'fat',\n    chartDataType: 'series' },\n    {\n        field: 'weight',\n    chartDataType: 'series' }]",
  "instanceMethods": [
    "function createChartContainer(chartRef) {\n    // destroy existing chart\n    if (currentChartRef) {\n        currentChartRef.destroyChart();\n    }\n    var eChart = chartRef.chartElement;\n    var eParent = document.querySelector('#myChart');\n    eParent.appendChild(eChart);\n    currentChartRef = chartRef;\n}"
  ],
  "externalEventHandlers": [
    {
      "name": "saveChart",
      "params": "",
      "body": "function saveChart() {\n    var chartModels = this.gridApi.getChartModels() || [];\n    if (chartModels.length > 0) {\n        chartModel = chartModels[0];\n    }\n    alert('Chart saved!');\n}"
    },
    {
      "name": "clearChart",
      "params": "",
      "body": "function clearChart() {\n    if (currentChartRef) {\n        currentChartRef.destroyChart();\n        currentChartRef = null;\n    }\n}"
    },
    {
      "name": "restoreChart",
      "params": "",
      "body": "function restoreChart() {\n    if (!chartModel)\n        return;\n    currentChartRef = this.gridApi.restoreChart(chartModel);\n}"
    }
  ],
  "utils": ["var chartModel;", "var currentChartRef;"],
  "callbackDependencies": {
    "saveChart": ["gridOptions", "chartModel", "alert"],
    "clearChart": ["currentChartRef"],
    "restoreChart": ["chartModel", "currentChartRef", "gridOptions"],
    "createChartContainer": ["currentChartRef"]
  },
  "template": "<div class=\"wrapper\">\n    <div id=\"buttons\">\n        <button onclick=\"saveChart()\">Save chart</button>\n        <button onclick=\"clearChart()\">Clear chart</button>\n        <button onclick=\"restoreChart()\">Restore chart</button>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n    <div id=\"myChart\" class=\"ag-theme-alpine my-chart\"></div>\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    " exampleHeight": 800,
    "enterprise": true
  }
}
