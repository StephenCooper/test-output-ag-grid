{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'id', rowDrag: true },\n    { field: 'color' },\n    { field: 'value1' },\n    { field: 'value2' },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    sortable: true,\n    filter: true,\n    resizable: true,\n    flex: 1,\n}"
    },
    {
      "name": "rowClassRules",
      "value": "{\n    'red-row': 'data.color == \"Red\"',\n    'green-row': 'data.color == \"Green\"',\n    'blue-row': 'data.color == \"Blue\"',\n}"
    },
    { "name": "rowData", "value": "createRowData()" },
    { "name": "rowDragManaged", "value": "true" },
    { "name": "animateRows", "value": "true" }
  ],
  "components": [],
  "defaultColDef": "{\n    sortable: true,\n    filter: true,\n    resizable: true,\n    flex: 1,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'id',\n    rowDrag: true },\n    { field: 'color' },\n    { field: 'value1' },\n    { field: 'value2' }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "var rowIdSequence = 100;",
    "function addCheckboxListener(params) {\n    var checkbox = document.querySelector('input[type=checkbox]');\n    checkbox.addEventListener('change', function () {\n        params.api.setSuppressMoveWhenRowDragging(checkbox.checked);\n    });\n}",
    "function createRowData() {\n    var data = [];\n    [\n        'Red',\n        'Green',\n        'Blue',\n        'Red',\n        'Green',\n        'Blue',\n        'Red',\n        'Green',\n        'Blue',\n    ].forEach(function (color) {\n        var newDataItem = {\n            id: rowIdSequence++,\n            color: color,\n            value1: Math.floor(Math.random() * 100),\n            value2: Math.floor(Math.random() * 100),\n        };\n        data.push(newDataItem);\n    });\n    return data;\n}",
    "function createTile(data) {\n    var el = document.createElement('div');\n    el.classList.add('tile');\n    el.classList.add(data.color.toLowerCase());\n    el.innerHTML =\n        '<div class=\"id\">' +\n            data.id +\n            '</div>' +\n            '<div class=\"value\">' +\n            data.value1 +\n            '</div>' +\n            '<div class=\"value\">' +\n            data.value2 +\n            '</div>';\n    return el;\n}",
    "function addDropZones(params) {\n    var tileContainer = document.querySelector('.tile-container');\n    var dropZone = {\n        getContainer: function () {\n            return tileContainer;\n        },\n        onDragStop: function (params) {\n            var tile = createTile(params.node.data);\n            tileContainer.appendChild(tile);\n        },\n    };\n    params.api.addRowDropZone(dropZone);\n}"
  ],
  "callbackDependencies": {
    "createRowData": [
      "[\n    'Red',\n    'Green',\n    'Blue',\n    'Red',\n    'Green',\n    'Blue',\n    'Red',\n    'Green',\n    'Blue',\n  ]"
    ],
    "addDropZones": ["createTile"]
  },
  "onGridReady": "{\n    addDropZones(params);\n    addCheckboxListener(params);\n}",
  "template": "<div class=\"example-wrapper\">\n    <div class=\"toolbar\">\n        <label><input type=\"checkbox\"> Enable suppressMoveWhenRowDragging</label>\n    </div>\n    <div class=\"drop-containers\">\n        <div class=\"grid-wrapper\">\n            GRID_TEMPLATE_PLACEHOLDER\n        </div>\n        <div class=\"drop-col\">\n            <span id=\"eDropTarget\" class=\"drop-target\">==&gt; Drop to here</span>\n            <div class=\"tile-container\"></div>\n        </div>\n    </div>\n</div>\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine"
  }
}
