{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'country', rowGroup: true, hide: true },\n    { field: 'athlete', minWidth: 180 },\n    { field: 'age' },\n    { field: 'year' },\n    { field: 'date', minWidth: 150 },\n    { field: 'sport', minWidth: 150 },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 100,\n    sortable: true,\n    filter: true,\n}"
    },
    { "name": "autoGroupColumnDef", "value": "{\n    minWidth: 200,\n}" },
    { "name": "groupDefaultExpanded", "value": "1" }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    sortable: true,\n    filter: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'country',\n    rowGroup: true,\n    hide: true },\n    {\n        field: 'athlete',\n    minWidth: 180 },\n    { field: 'age' },\n    { field: 'year' },\n    {\n        field: 'date',\n    minWidth: 150 },\n    {\n        field: 'sport',\n    minWidth: 150 },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "onBtForEachNode",
      "params": "",
      "body": "function onBtForEachNode() {\n    console.log('### api.forEachNode() ###');\n    this.gridApi.forEachNode(printNode);\n}"
    },
    {
      "name": "onBtForEachNodeAfterFilter",
      "params": "",
      "body": "function onBtForEachNodeAfterFilter() {\n    console.log('### api.forEachNodeAfterFilter() ###');\n    this.gridApi.forEachNodeAfterFilter(printNode);\n}"
    },
    {
      "name": "onBtForEachNodeAfterFilterAndSort",
      "params": "",
      "body": "function onBtForEachNodeAfterFilterAndSort() {\n    console.log('### api.forEachNodeAfterFilterAndSort() ###');\n    this.gridApi.forEachNodeAfterFilterAndSort(printNode);\n}"
    },
    {
      "name": "onBtForEachLeafNode",
      "params": "",
      "body": "function onBtForEachLeafNode() {\n    console.log('### api.forEachLeafNode() ###');\n    this.gridApi.forEachLeafNode(printNode);\n}"
    }
  ],
  "utils": [
    "const printNode = (node, index) => {\n    if (node.group) {\n        console.log(index + ' -> group: ' + node.key);\n    }\n    else {\n        console.log(index + ' -> data: ' + node.data.country + ', ' + node.data.athlete);\n    }\n};"
  ],
  "callbackDependencies": {
    "onBtForEachNode": ["gridOptions"],
    "onBtForEachNodeAfterFilter": ["gridOptions"],
    "onBtForEachNodeAfterFilterAndSort": ["gridOptions"],
    "onBtForEachLeafNode": ["gridOptions"]
  },
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
    "callback": "params.api.setRowData(data.slice(0, 50))"
  },
  "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 1rem;\">\n        <button onclick=\"onBtForEachNode()\">For-Each Node</button>\n        <button onclick=\"onBtForEachNodeAfterFilter()\">For-Each Node After Filter</button>\n        <button onclick=\"onBtForEachNodeAfterFilterAndSort()\">For-Each Node After Filter and Sort</button>\n        <button onclick=\"onBtForEachLeafNode()\">For-Each Leaf Node</button>\n    </div>\n\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 590,
    "modules": ["clientside", "rowgrouping"]
  }
}
