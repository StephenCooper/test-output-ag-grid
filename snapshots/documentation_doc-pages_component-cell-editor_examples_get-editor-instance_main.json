{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'first_name', headerName: 'First Name', width: 120, editable: true },\n    { field: 'last_name', headerName: 'Last Name', width: 120, editable: true },\n    {\n        field: 'gender',\n        width: 100,\n        cellEditor: 'mySimpleEditor',\n    },\n    {\n        field: 'age',\n        width: 80,\n        cellEditor: 'mySimpleEditor',\n    },\n    {\n        field: 'mood',\n        width: 90,\n        cellEditor: 'mySimpleEditor',\n    },\n    {\n        field: 'country',\n        width: 110,\n        cellEditor: 'mySimpleEditor',\n    },\n    {\n        field: 'address',\n        width: 502,\n        cellEditor: 'mySimpleEditor',\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    editable: true,\n    sortable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    resizable: true,\n}"
    },
    { "name": "rowData", "value": "getData()" },
    {
      "name": "components",
      "value": "{\n    mySimpleEditor: MySimpleEditor,\n}"
    }
  ],
  "components": [],
  "defaultColDef": null,
  "globalComponents": [],
  "parsedColDefs": "",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [],
  "callbackDependencies": {},
  "onGridReady": "{\n    setInterval(() => {\n        const instances = params.api.getCellEditorInstances();\n        if (instances.length > 0) {\n            const instance = instances[0];\n            if (instance.myCustomFunction) {\n                const result = instance.myCustomFunction();\n                console.log(`found editing cell: row index = ${result.rowIndex}, column = ${result.colId}.`);\n            }\n            else {\n                console.log('found editing cell, but method myCustomFunction not found, must be the default editor.');\n            }\n        }\n        else {\n            console.log('found not editing cell.');\n        }\n    }, 1000);\n}",
  "template": "GRID_TEMPLATE_PLACEHOLDER\n\n\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true
  }
}
