{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    // this column shows just the country group values, but has not group renderer, so there is no expand / collapse functionality\n    {\n        headerName: 'Country Group - No Renderer',\n        showRowGroup: 'country',\n        minWidth: 250,\n    },\n    // same as before, but we show all group values, again with no cell renderer\n    { headerName: 'All Groups - No Renderer', showRowGroup: true, minWidth: 240 },\n    // add in a cell renderer\n    {\n        headerName: 'Group Renderer A',\n        showRowGroup: true,\n        cellRenderer: 'agGroupCellRenderer',\n        minWidth: 220,\n    },\n    // add in a field\n    {\n        headerName: 'Group Renderer B',\n        field: 'city',\n        showRowGroup: true,\n        cellRenderer: 'agGroupCellRenderer',\n        minWidth: 220,\n    },\n    // add in a cell renderer params\n    {\n        headerName: 'Group Renderer C',\n        field: 'city',\n        minWidth: 240,\n        showRowGroup: true,\n        cellRenderer: 'agGroupCellRenderer',\n        cellRendererParams: {\n            suppressCount: true,\n            checkbox: true,\n            innerRenderer: 'simpleCellRenderer',\n            suppressDoubleClickExpand: true,\n            suppressEnterExpand: true,\n        },\n    },\n    { headerName: 'Type', field: 'type', rowGroup: true },\n    { headerName: 'Country', field: 'country', rowGroup: true },\n    { headerName: 'City', field: 'city' },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 120,\n    resizable: true,\n}"
    },
    { "name": "rowData", "value": "getData()" },
    {
      "name": "components",
      "value": "{\n    simpleCellRenderer: getSimpleCellRenderer(),\n}"
    },
    { "name": "groupDisplayType", "value": "'custom'" },
    { "name": "suppressRowClickSelection", "value": "true" },
    { "name": "groupDefaultExpanded", "value": "1" },
    { "name": "rowSelection", "value": "'multiple'" },
    { "name": "groupSelectsChildren", "value": "true" },
    { "name": "animateRows", "value": "true" }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 120,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        headerName: 'Country Group - No Renderer',\n    showRowGroup: 'country',\n    minWidth: 250 },\n    {\n        headerName: 'All Groups - No Renderer',\n    showRowGroup: true,\n    minWidth: 240 },\n    {\n        headerName: 'Group Renderer A',\n    showRowGroup: true,\n    cellRenderer: 'agGroupCellRenderer',\n    minWidth: 220 },\n    {\n        headerName: 'Group Renderer B',\n    field: 'city',\n    showRowGroup: true,\n    cellRenderer: 'agGroupCellRenderer',\n    minWidth: 220 },\n    {\n        headerName: 'Group Renderer C',\n    field: 'city',\n    minWidth: 240,\n    showRowGroup: true,\n    cellRenderer: 'agGroupCellRenderer',\n    cellRendererParams : {\n    suppressCount: true,\n    checkbox: true,\n    innerRenderer: 'simpleCellRenderer',\n    suppressDoubleClickExpand: true,\n    suppressEnterExpand: true\n } },\n    {\n        headerName: 'Type',\n    field: 'type',\n    rowGroup: true },\n    {\n        headerName: 'Country',\n    field: 'country',\n    rowGroup: true },\n    {\n        headerName: 'City',\n    field: 'city' }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "function getSimpleCellRenderer() {\n    class SimpleCellRenderer {\n        init(params) {\n            var tempDiv = document.createElement('div');\n            if (params.node.group) {\n                tempDiv.innerHTML =\n                    '<span style=\"border-bottom: 1px solid grey; border-left: 1px solid grey; padding: 2px;\">' +\n                        params.value +\n                        '</span>';\n            }\n            else {\n                tempDiv.innerHTML =\n                    '<span><img src=\"https://flags.fmcdn.net/data/flags/mini/ie.png\" style=\"width: 20px; padding-right: 4px;\"/>' +\n                        params.value +\n                        '</span>';\n            }\n            this.eGui = tempDiv.firstChild;\n        }\n        getGui() {\n            return this.eGui;\n        }\n    }\n    return SimpleCellRenderer;\n}"
  ],
  "callbackDependencies": {},
  "template": "\n\n\n    GRID_TEMPLATE_PLACEHOLDER\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true
  }
}
