{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    {\n        headerName: 'Age (No Comparator)',\n        field: 'age',\n        filter: 'agSetColumnFilter',\n    },\n    {\n        headerName: 'Age (With Comparator)',\n        field: 'age',\n        filter: 'agSetColumnFilter',\n        filterParams: filterParams,\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    filter: true,\n    resizable: true,\n}"
    },
    { "name": "rowData", "value": "getRowData()" },
    { "name": "sideBar", "value": "'filters'" }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    filter: true,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        headerName: 'Age (No Comparator)',\n    field: 'age',\n    filter: 'agSetColumnFilter' },\n    {\n        headerName: 'Age (With Comparator)',\n    field: 'age',\n    filter: 'agSetColumnFilter',\n    filterParams: 'AG_LITERAL_filterParams' }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "var filterParams = {\n    comparator: function (a, b) {\n        var valA = parseInt(a);\n        var valB = parseInt(b);\n        if (valA === valB)\n            return 0;\n        return valA > valB ? 1 : -1;\n    },\n};",
    "function getRowData() {\n    var rows = [];\n    for (var i = 1; i < 117; i++) {\n        rows.push({ age: i });\n    }\n    return rows;\n}"
  ],
  "callbackDependencies": {},
  "onGridReady": "{\n    ;\n    ((params.api.getToolPanelInstance('filters'))).expandFilters();\n}",
  "template": "GRID_TEMPLATE_PLACEHOLDER",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 720,
    "modules": ["clientside", "setfilter", "menu", "columnpanel", "filterpanel"]
  }
}
