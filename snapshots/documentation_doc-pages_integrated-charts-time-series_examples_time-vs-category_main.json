{
  "eventHandlers": [
    {
      "name": "firstDataRendered",
      "handlerName": "onFirstDataRendered",
      "handler": "function onFirstDataRendered(params) {\n    if (currentChartRef) {\n        currentChartRef.destroyChart();\n    }\n    var createRangeChartParams = {\n        chartContainer: document.querySelector('#myChart'),\n        suppressChartRanges: true,\n        cellRange: {\n            columns: ['date', 'avgTemp'],\n        },\n        chartType: 'line',\n    };\n    currentChartRef = params.api.createRangeChart(createRangeChartParams);\n}"
    }
  ],
  "properties": [
    { "name": "columnDefs", "value": "getColumnDefs()" },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    resizable: true,\n}"
    },
    { "name": "popupParent", "value": "document.body" },
    { "name": "rowData", "value": "getRowData()" },
    { "name": "enableRangeSelection", "value": "true" },
    { "name": "enableCharts", "value": "true" },
    {
      "name": "chartThemeOverrides",
      "value": "{\n    line: {\n        title: {\n            enabled: true,\n            text: 'Average Daily Temperatures',\n        },\n        legend: {\n            enabled: false,\n        },\n        padding: {\n            top: 15,\n            bottom: 25,\n        },\n        navigator: {\n            enabled: true,\n            height: 20,\n            margin: 25,\n        },\n        axes: {\n            time: {\n                label: {\n                    rotation: 0,\n                    format: '%d %b',\n                },\n            },\n            category: {\n                label: {\n                    rotation: 0,\n                    formatter: function (params) {\n                        return moment(new Date(params.value)).format('DD MMM');\n                    },\n                },\n            },\n            number: {\n                label: {\n                    formatter: function (params) {\n                        return params.value + 'Â°C';\n                    },\n                },\n            },\n        },\n    },\n}"
    },
    { "name": "getChartToolbarItems", "value": null }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "",
  "instanceMethods": [
    "function getChartToolbarItems() {\n    return ['chartData', 'chartFormat'];\n}"
  ],
  "externalEventHandlers": [
    {
      "name": "toggleAxis",
      "params": "",
      "body": "function toggleAxis() {\n    var axisBtn = document.querySelector('#axisBtn');\n    axisBtn.textContent = axisBtn.value;\n    axisBtn.value = axisBtn.value === 'time' ? 'category' : 'time';\n    const columnDefs = getColumnDefs();\n    columnDefs.forEach(function (colDef) {\n        if (colDef.field === 'date') {\n            colDef.chartDataType = axisBtn.value;\n        }\n    });\n    this.gridApi.setColumnDefs(columnDefs);\n}"
    }
  ],
  "utils": [
    "function getColumnDefs() {\n    return [\n        { field: 'date', valueFormatter: dateFormatter },\n        { field: 'avgTemp' },\n    ];\n}",
    "var currentChartRef;",
    "function dateFormatter(params) {\n    return params.value\n        ? params.value.toISOString().substring(0, 10)\n        : params.value;\n}",
    "function getRowData() {\n    return [\n        { date: new Date(2019, 0, 1), avgTemp: 8.27 },\n        { date: new Date(2019, 0, 5), avgTemp: 7.22 },\n        { date: new Date(2019, 0, 8), avgTemp: 11.54 },\n        { date: new Date(2019, 0, 11), avgTemp: 8.44 },\n        { date: new Date(2019, 0, 22), avgTemp: 12.03 },\n        { date: new Date(2019, 0, 23), avgTemp: 9.68 },\n        { date: new Date(2019, 0, 24), avgTemp: 9.9 },\n        { date: new Date(2019, 0, 25), avgTemp: 8.74 },\n    ];\n}"
  ],
  "callbackDependencies": {
    "getColumnDefs": ["dateFormatter"],
    "onFirstDataRendered": ["currentChartRef"],
    "toggleAxis": ["getColumnDefs", "gridOptions"],
    "getRowData": ["Date"]
  },
  "template": "<label>Switch Axis to: </label>\n<button id=\"axisBtn\" onclick=\"toggleAxis()\" value=\"time\">Category</button>\n<div class=\"wrapper\">\n    GRID_TEMPLATE_PLACEHOLDER\n    <div id=\"myChart\" class=\"ag-theme-alpine my-chart\"></div>\n</div>\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "exampleHeight": 740,
    "enterprise": true,
    "extras": ["momentjs"]
  }
}
