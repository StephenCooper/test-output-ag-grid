{
  "eventHandlers": [
    {
      "name": "firstDataRendered",
      "handlerName": "onFirstDataRendered",
      "handler": "function onFirstDataRendered(params) {\n    var cellRange = {\n        rowStartIndex: 0,\n        rowEndIndex: 4,\n        columns: ['country', 'gold', 'silver', 'bronze'],\n    };\n    var createRangeChartParams = {\n        cellRange: cellRange,\n        chartType: 'groupedBar',\n    };\n    params.api.createRangeChart(createRangeChartParams);\n}"
    }
  ],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'country', width: 150, chartDataType: 'category' },\n    { field: 'gold', chartDataType: 'series' },\n    { field: 'silver', chartDataType: 'series' },\n    { field: 'bronze', chartDataType: 'series' },\n    {\n        headerName: 'A',\n        valueGetter: 'Math.floor(Math.random()*1000)',\n        chartDataType: 'series',\n    },\n    {\n        headerName: 'B',\n        valueGetter: 'Math.floor(Math.random()*1000)',\n        chartDataType: 'series',\n    },\n    {\n        headerName: 'C',\n        valueGetter: 'Math.floor(Math.random()*1000)',\n        chartDataType: 'series',\n    },\n    {\n        headerName: 'D',\n        valueGetter: 'Math.floor(Math.random()*1000)',\n        chartDataType: 'series',\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    width: 100,\n    resizable: true,\n}"
    },
    { "name": "popupParent", "value": "document.body" },
    { "name": "rowData", "value": "getData()" },
    { "name": "enableRangeSelection", "value": "true" },
    { "name": "enableCharts", "value": "true" },
    {
      "name": "chartThemeOverrides",
      "value": "{\n    cartesian: {\n        axes: {\n            number: {\n                line: {\n                    width: 6,\n                    color: 'black',\n                },\n                tick: {\n                    width: 2,\n                    size: 10,\n                    color: 'gray',\n                },\n                label: {\n                    fontStyle: 'italic',\n                    fontWeight: 'bold',\n                    fontSize: 15,\n                    fontFamily: 'Arial, sans-serif',\n                    color: '#de7b73',\n                    padding: 10,\n                    rotation: 20,\n                    formatter: function (params) {\n                        return params.value.toString().toUpperCase();\n                    },\n                },\n                gridStyle: [\n                    {\n                        stroke: 'rgba(94,100,178,0.5)',\n                    },\n                ],\n                title: {\n                    enabled: true,\n                    text: 'Tonnes',\n                    fontStyle: 'italic',\n                    fontWeight: 'bold',\n                    fontSize: 16,\n                    fontFamily: 'Arial, sans-serif',\n                    color: 'blue',\n                },\n            },\n            category: {\n                line: {\n                    width: 2,\n                    color: 'blue',\n                },\n                tick: {\n                    width: 2,\n                    size: 10,\n                    color: 'blue',\n                },\n                label: {\n                    fontStyle: 'italic',\n                    fontWeight: 'bold',\n                    fontSize: 15,\n                    fontFamily: 'Arial, sans-serif',\n                    color: '#de7b73',\n                    padding: 10,\n                    rotation: -20,\n                    formatter: function (params) {\n                        var value = String(params.value);\n                        return value === 'United Kingdom' ? 'UK' : '(' + value + ')';\n                    },\n                },\n                gridStyle: [\n                    {\n                        stroke: '#80808044',\n                        lineDash: undefined,\n                    },\n                    {\n                        stroke: '#80808044',\n                        lineDash: [6, 3],\n                    },\n                ],\n                title: {\n                    fontStyle: 'italic',\n                    fontWeight: 'bold',\n                    fontSize: 16,\n                    fontFamily: 'Arial, sans-serif',\n                    color: 'blue',\n                },\n            },\n        },\n        navigator: {\n            enabled: true,\n            height: 9,\n            min: 0.2,\n            max: 1,\n            mask: {\n                fill: 'lime',\n                stroke: 'black',\n                strokeWidth: 2,\n                fillOpacity: 0.3,\n            },\n            minHandle: {\n                fill: 'yellow',\n                stroke: 'blue',\n                strokeWidth: 2,\n                width: 12,\n                height: 22,\n                gripLineGap: 4,\n                gripLineLength: 12,\n            },\n            maxHandle: {\n                fill: 'yellow',\n                stroke: 'blue',\n                strokeWidth: 2,\n                width: 12,\n                height: 22,\n                gripLineGap: 4,\n                gripLineLength: 12,\n            },\n        },\n    },\n}"
    }
  ],
  "components": [],
  "defaultColDef": "{\n    width: 100,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'country',\n    width: 150,\n    chartDataType: 'category' },\n    {\n        field: 'gold',\n    chartDataType: 'series' },\n    {\n        field: 'silver',\n    chartDataType: 'series' },\n    {\n        field: 'bronze',\n    chartDataType: 'series' },\n    {\n        headerName: 'A',\n    valueGetter: 'Math.floor(Math.random()*1000)',\n    chartDataType: 'series' },\n    {\n        headerName: 'B',\n    valueGetter: 'Math.floor(Math.random()*1000)',\n    chartDataType: 'series' },\n    {\n        headerName: 'C',\n    valueGetter: 'Math.floor(Math.random()*1000)',\n    chartDataType: 'series' },\n    {\n        headerName: 'D',\n    valueGetter: 'Math.floor(Math.random()*1000)',\n    chartDataType: 'series' }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [],
  "callbackDependencies": {},
  "template": "GRID_TEMPLATE_PLACEHOLDER\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true
  }
}
