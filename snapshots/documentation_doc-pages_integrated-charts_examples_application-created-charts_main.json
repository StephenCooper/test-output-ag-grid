{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
    },
    {
      "name": "defaultColDef",
    },
    {
      "name": "columnTypes",
    },
    {
      "name": "animateRows",
      {
        "name": "enableCharts",
        {
          "name": "suppressAggFuncInHeader",
          {
            "name": "getRowNodeId",
            {
              "name": "chartThemes",
              {
                "name": "chartThemeOverrides",
              },
              {
                "name": "getChartToolbarItems",
              }
            ],
            "components": [],
            "defaultColDef": null,
            "globalComponents": [],
            "parsedColDefs": "",
            "instanceMethods": [],
            "externalEventHandlers": [
              {
                "name": "createChart",
                "params": "'stackedColumn'",
                "body": "function createChart(type) {// destroy existing chartif (chartRef) {chartRef.destroyChart();}var params = {cellRange: {columns: ['product','current','previous','pl1','pl2','gainDx','sxPx',]},chartContainer: document.querySelector('#myChart'),chartType: type,suppressChartRanges: true,aggFunc: 'sum',};chartRef = this.gridApi.createRangeChart(params);}"
              },
              {
                "name": "onStartLoad",
                "params": "",
                "body": "function onStartLoad() {worker.postMessage('start');}"
              },
              {
                "name": "onStopMessages",
                "params": "",
                "body": "function onStopMessages() {worker.postMessage('stop');}"
              }
            ],
            "utils": [
              "var chartRef;",
              "function numberCellFormatter(params) {return Math.floor(params.value).toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');}",
              "function yAxisLabelFormatter(params) {var n = params.value;if (n < 1e3)return n;if (n >= 1e3 && n < 1e6)return +(n / 1e3).toFixed(1) + 'K';if (n >= 1e6 && n < 1e9)return +(n / 1e6).toFixed(1) + 'M';if (n >= 1e9 && n < 1e12)return +(n / 1e9).toFixed(1) + 'B';if (n >= 1e12)return +(n / 1e12).toFixed(1) + 'T';}",
              "function tooltipRenderer(params) {var value = '$' +params.datum[params.yKey].toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');var title = params.title || params.yName;return '<div style=\"padding: 5px\"><b>' + title + '</b>: ' + value + '</div>';}",
              "var worker;"
            ],
            "callbackDependencies": {
              "createChart": [
                "chartRef",
                "gridOptions"
              ],
              "numberCellFormatter": [
                "Math"
              ],
              "yAxisLabelFormatter": [
                "n / 1e3",
                "n / 1e6",
                "n / 1e9",
                "n / 1e12"
              ],
              "onStartLoad": [
                "worker"
              ],
              "onStopMessages": [
                "worker"
              ]
            },
            "template": "<div id=\"myApp\" class=\"wrapper\"><div style=\"padding-bottom: 4px\"><span><button onclick=\"onStopMessages()\">■ Stop</button><button onclick=\"onStartLoad()\">► Start</button></span><span style=\"margin-left: 30px;\"><button onclick=\"createChart('stackedColumn')\">Stacked Column Chart</button><button onclick=\"createChart('groupedColumn')\">Grouped Column Chart</button><button onclick=\"createChart('line')\">Line Chart</button></span></div>GRID_TEMPLATE_PLACEHOLDER<div id=\"myChart\" class=\"ag-theme-balham-dark my-chart\"></div></div>",
            "gridSettings": {
              "width": "100%",
              "height": "100%",
              "theme": "ag-theme-balham-dark",
              "exampleHeight": 825,
              "enterprise": true
            }
          }