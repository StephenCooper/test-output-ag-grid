{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    {\n        field: 'country',\n        rowGroup: true,\n        hide: true,\n    },\n    {\n        headerName: 'Monthly Data',\n        children: [\n            {\n                field: 'jan',\n                cellRenderer: accountingCellRenderer,\n                cellClass: 'cell-figure',\n                valueGetter: monthValueGetter,\n                cellClassRules: monthCellClassRules,\n                aggFunc: 'sum',\n            },\n            {\n                field: 'feb',\n                cellRenderer: accountingCellRenderer,\n                cellClass: 'cell-figure',\n                valueGetter: monthValueGetter,\n                cellClassRules: monthCellClassRules,\n                aggFunc: 'sum',\n            },\n            {\n                field: 'mar',\n                cellRenderer: accountingCellRenderer,\n                cellClass: 'cell-figure',\n                valueGetter: monthValueGetter,\n                cellClassRules: monthCellClassRules,\n                aggFunc: 'sum',\n            },\n            {\n                field: 'apr',\n                cellRenderer: accountingCellRenderer,\n                cellClass: 'cell-figure',\n                valueGetter: monthValueGetter,\n                cellClassRules: monthCellClassRules,\n                aggFunc: 'sum',\n            },\n            {\n                field: 'may',\n                cellRenderer: accountingCellRenderer,\n                cellClass: 'cell-figure',\n                valueGetter: monthValueGetter,\n                cellClassRules: monthCellClassRules,\n                aggFunc: 'sum',\n            },\n            {\n                field: 'jun',\n                cellRenderer: accountingCellRenderer,\n                cellClass: 'cell-figure',\n                valueGetter: monthValueGetter,\n                cellClassRules: monthCellClassRules,\n                aggFunc: 'sum',\n            },\n            {\n                headerName: 'YTD',\n                cellClass: 'cell-figure',\n                cellRenderer: accountingCellRenderer,\n                valueGetter: yearToDateValueGetter,\n                cellStyle: { 'font-weight': 'bold' },\n                aggFunc: 'sum',\n            },\n        ],\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 120,\n    sortable: true,\n    resizable: true,\n}"
    },
    {
      "name": "autoGroupColumnDef",
      "value": "{\n    headerName: 'Location',\n    field: 'city',\n    minWidth: 260,\n    cellRenderer: 'agGroupCellRenderer',\n    cellRendererParams: {\n        checkbox: true,\n    },\n}"
    },
    { "name": "animateRows", "value": "true" },
    { "name": "rowSelection", "value": "'multiple'" },
    { "name": "groupSelectsChildren", "value": "true" },
    { "name": "enableRangeSelection", "value": "true" },
    {
      "name": "context",
      "value": "{\n    month: 0,\n    months: [\n        'jan',\n        'feb',\n        'mar',\n        'apr',\n        'may',\n        'jun',\n        'jul',\n        'aug',\n        'sep',\n        'oct',\n        'nov',\n        'dec',\n    ],\n}"
    }
  ],
  "components": [],
  "defaultColDef": null,
  "globalComponents": [],
  "parsedColDefs": "",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "onChangeMonth",
      "params": "-1",
      "body": "function onChangeMonth(i) {\n    var newMonth = (gridOptions.context.month += i);\n    if (newMonth < -1) {\n        newMonth = -1;\n    }\n    if (newMonth > 5) {\n        newMonth = 5;\n    }\n    gridOptions.context.month = newMonth;\n    document.querySelector('#monthName').innerHTML = monthNames[newMonth + 1];\n    this.gridApi.refreshClientSideRowModel('aggregate');\n    this.gridApi.refreshCells();\n}"
    },
    {
      "name": "onQuickFilterChanged",
      "params": "this.value",
      "body": "function onQuickFilterChanged(value) {\n    this.gridApi.setQuickFilter(value);\n}"
    }
  ],
  "utils": [
    "var monthValueGetter = '(ctx.month < ctx.months.indexOf(colDef.field)) ? data[colDef.field + \"_bud\"] : data[colDef.field + \"_act\"]';",
    "var monthCellClassRules = {\n    'cell-act': 'ctx.month < ctx.months.indexOf(colDef.field)',\n    'cell-bud': 'ctx.month >= ctx.months.indexOf(colDef.field)',\n    'cell-negative': 'x < 0',\n};",
    "var yearToDateValueGetter = 'var total = 0; ctx.months.forEach( function(monthName, monthIndex) { if (monthIndex<=ctx.month) { total += data[monthName + \"_act\"]; } }); return total; ';",
    "var accountingCellRenderer = function (params) {\n    if (params.value == null) {\n        return '';\n    }\n    else if (params.value >= 0) {\n        return params.value.toLocaleString();\n    }\n    else {\n        return '(' + Math.abs(params.value).toLocaleString() + ')';\n    }\n};",
    "var monthNames = [\n    'Budget Only',\n    'Year to Jan',\n    'Year to Feb',\n    'Year to Mar',\n    'Year to Apr',\n    'Year to May',\n    'Year to Jun',\n    'Year to Jul',\n    'Year to Aug',\n    'Year to Sep',\n    'Year to Oct',\n    'Year to Nov',\n    'Full Year',\n];"
  ],
  "callbackDependencies": {
    "onChangeMonth": ["gridOptions", "monthNames"],
    "onQuickFilterChanged": ["gridOptions"]
  },
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/monthly-sales.json'",
    "callback": "{\n    params.api.setRowData(data);\n}"
  },
  "template": "<div style=\"width: 100%; height: 100%;\">\n    <div style=\"height: 10%; padding: 10px;\">\n\n        <input type=\"text\" style=\"width: 100px;\" oninput=\"onQuickFilterChanged(this.value)\" placeholder=\"Filter...\">\n\n        <span style=\"padding-left: 20px;\">\n            <b>Period:</b>\n            <button onclick=\"onChangeMonth(-1)\"><i class=\"fa fa-chevron-left\"></i></button>\n            <button onclick=\"onChangeMonth(1)\"><i class=\"fa fa-chevron-right\"></i></button>\n            <span id=\"monthName\" style=\"width: 100px; display: inline-block;\">Year to Jan</span>\n        </span>\n\n        <span style=\"padding-left: 20px;\">\n            <b>Legend:</b>&nbsp;&nbsp;\n            <div class=\"cell-bud legend-box\"></div> Actual&nbsp;&nbsp;\n            <div class=\"cell-act legend-box\"></div> Budget\n        </span>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "90%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "extras": ["fontawesome", "bootstrap"]
  }
}
