{
  "eventHandlers": [
    {
      "name": "firstDataRendered",
      "handlerName": "onFirstDataRendered",
      "handler": "function onFirstDataRendered(params) {const createRangeChartParams = {cellRange: {columns: ['country', 'sugar', 'fat', 'weight'],},chartType: 'groupedColumn',chartContainer: document.querySelector('#myChart'),};params.api.createRangeChart(createRangeChartParams);}"
    },
    {
      "name": "chartCreated",
      "handlerName": "onChartCreated",
      "handler": "function onChartCreated(event) {chartId = event.chartId;}"
    }
  ],
  "properties": [
    {
      "name": "columnDefs",
    },
    {
      "name": "defaultColDef",
    },
    {
      "name": "rowData",
      {
        "name": "enableRangeSelection",
        {
          "name": "popupParent",
          {
            "name": "enableCharts",
            {
              "name": "chartThemeOverrides",
            }
          ],
          "components": [],
          "defaultColDef": "{editable: true,sortable: true,flex: 1,minWidth: 100,filter: true,resizable: true,}",
          "globalComponents": [],
          "parsedColDefs": "[{field: 'country',chartDataType: 'category' },{field: 'sugar',chartDataType: 'series' },{field: 'fat',chartDataType: 'series' },{field: 'weight',chartDataType: 'series' }]",
          "instanceMethods": [],
          "externalEventHandlers": [
            {
              "name": "downloadChartImage",
              "params": "'image/png'",
              "body": "function downloadChartImage(fileFormat) {if (!chartId) {return;}const params = { fileFormat, chartId };const imageDataURL = this.gridApi.getChartImageDataURL(params);if (imageDataURL) {const a = document.createElement('a');a.href = imageDataURL;a.download = 'image';a.style.display = 'none';document.body.appendChild(a);a.click();document.body.removeChild(a);}}"
            },
            {
              "name": "openChartImage",
              "params": "'image/png'",
              "body": "function openChartImage(fileFormat) {if (!chartId) {return;}const params = { fileFormat, chartId };const imageDataURL = this.gridApi.getChartImageDataURL(params);if (imageDataURL) {const image = new Image();image.src = imageDataURL;const w = window.open('');w.document.write(image.outerHTML);w.document.close();}}"
            }
          ],
          "utils": [
            "var chartId;"
          ],
          "callbackDependencies": {
            "onChartCreated": [
              "chartId"
            ],
            "downloadChartImage": [
              "chartId",
              "gridOptions"
            ],
            "openChartImage": [
              "chartId",
              "gridOptions",
              "Image",
              "window"
            ]
          },
          "template": "<div class=\"wrapper\"><div id=\"buttons\"><button onclick=\"downloadChartImage('image/png')\">Download chart PNG</button><button onclick=\"downloadChartImage('image/jpeg')\">Download chart JPEG</button><button onclick=\"openChartImage('image/png')\">Open PNG</button><button onclick=\"openChartImage('image/jpeg')\">Open JPEG</button></div>GRID_TEMPLATE_PLACEHOLDER<div id=\"myChart\" class=\"ag-theme-alpine my-chart\"></div></div>",
          "gridSettings": {
            "width": "100%",
            "height": "100%",
            "theme": "ag-theme-alpine",
            " exampleHeight": 800,
            "enterprise": true
          }
        }