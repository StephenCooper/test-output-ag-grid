{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'athlete', width: 150 },\n    { field: 'country', width: 150 },\n    { field: 'year', width: 100 },\n    { field: 'gold', width: 100, cellRenderer: 'medalCellRenderer' },\n    { field: 'silver', width: 100, cellRenderer: 'medalCellRenderer' },\n    { field: 'bronze', width: 100, cellRenderer: 'medalCellRenderer' },\n    { field: 'total', width: 100 },\n]"
    },
    {
      "name": "components",
      "value": "{\n    medalCellRenderer: MedalCellRenderer,\n}"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    editable: true,\n    sortable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    resizable: true,\n}"
    }
  ],
  "components": [{ "name": "medalCellRenderer", "value": "MedalCellRenderer" }],
  "defaultColDef": "{\n    editable: true,\n    sortable: true,\n    flex: 1,\n    minWidth: 100,\n    filter: true,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'athlete',\n    width: 150 },\n    {\n        field: 'country',\n    width: 150 },\n    {\n        field: 'year',\n    width: 100 },\n    {\n        field: 'gold',\n    width: 100,\n    cellRenderer: 'medalCellRenderer' },\n    {\n        field: 'silver',\n    width: 100,\n    cellRenderer: 'medalCellRenderer' },\n    {\n        field: 'bronze',\n    width: 100,\n    cellRenderer: 'medalCellRenderer' },\n    {\n        field: 'total',\n    width: 100 }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "onCallGold",
      "params": "",
      "body": "function onCallGold() {\n    console.log('=========> calling all gold');\n    // pass in list of columns, here it's gold only\n    const params = { columns: ['gold'] };\n    const instances = this.gridApi.getCellRendererInstances(params);\n    instances.forEach(instance => {\n        instance.medalUserFunction();\n    });\n}"
    },
    {
      "name": "onFirstRowGold",
      "params": "",
      "body": "function onFirstRowGold() {\n    console.log('=========> calling gold row one');\n    // pass in one column and one row to identify one cell\n    const firstRowNode = this.gridApi.getDisplayedRowAtIndex(0);\n    const params = { columns: ['gold'], rowNodes: [firstRowNode] };\n    const instances = this.gridApi.getCellRendererInstances(params);\n    instances.forEach(instance => {\n        instance.medalUserFunction();\n    });\n}"
    },
    {
      "name": "onCallAllCells",
      "params": "",
      "body": "function onCallAllCells() {\n    console.log('=========> calling everything');\n    // no params, goes through all rows and columns where cell renderer exists\n    const instances = this.gridApi.getCellRendererInstances();\n    instances.forEach(instance => {\n        instance.medalUserFunction();\n    });\n}"
    }
  ],
  "utils": [],
  "callbackDependencies": {
    "onCallGold": ["gridOptions"],
    "onFirstRowGold": ["gridOptions"],
    "onCallAllCells": ["gridOptions"]
  },
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
    "callback": "{\n    params.api.setRowData(data);\n}"
  },
  "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px;\">\n        <button onclick=\"onCallGold()\">Gold</button>\n        <button onclick=\"onFirstRowGold()\">First Row Gold</button>\n        <button onclick=\"onCallAllCells()\">All Cells</button>\n    </div>\n    \n    GRID_TEMPLATE_PLACEHOLDER\n</div>\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine"
  }
}
