{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'country', rowGroup: true, hide: true },\n    { field: 'accountId', hide: true },\n    { field: 'name' },\n    { field: 'calls' },\n    { field: 'totalDuration' },\n]"
    },
    { "name": "defaultColDef", "value": "{\n    flex: 1,\n}" },
    { "name": "autoGroupColumnDef", "value": "{\n    field: 'accountId',\n}" },
    { "name": "animateRows", "value": "true" },
    { "name": "rowModelType", "value": "'serverSide'" },
    { "name": "serverSideStoreType", "value": "'partial'" },
    { "name": "masterDetail", "value": "true" },
    {
      "name": "detailCellRendererParams",
      "value": "{\n    detailGridOptions: {\n        columnDefs: [\n            { field: 'callId' },\n            { field: 'direction' },\n            { field: 'duration', valueFormatter: \"x.toLocaleString() + 's'\" },\n            { field: 'switchCode' },\n            { field: 'number' },\n        ],\n        defaultColDef: {\n            flex: 1,\n        },\n    },\n    getDetailRowData: function (params) {\n        // supply details records to detail cell renderer (i.e. detail grid)\n        params.successCallback(params.data.callRecords);\n    },\n}"
    }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'country',\n    rowGroup: true,\n    hide: true },\n    {\n        field: 'accountId',\n    hide: true },\n    { field: 'name' },\n    { field: 'calls' },\n    { field: 'totalDuration' }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "function getServerSideDatasource(server) {\n    return {\n        getRows: function (params) {\n            console.log('[Datasource] - rows requested by grid: ', params.request);\n            var response = server.getData(params.request);\n            // adding delay to simulate real server call\n            setTimeout(function () {\n                if (response.success) {\n                    // call the success callback\n                    params.success({ rowData: response.rows, rowCount: response.lastRow });\n                }\n                else {\n                    // inform the grid request failed\n                    params.fail();\n                }\n            }, 200);\n        },\n    };\n}"
  ],
  "callbackDependencies": {
    "getServerSideDatasource": ["params", "setTimeout"]
  },
  "onGridReady": "{\n    setTimeout(function () {\n        // expand some master row\n        var someRow = params.api.getRowNode('1');\n        if (someRow) {\n            someRow.setExpanded(true);\n        }\n    }, 1000);\n}",
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/call-data.json'",
    "callback": "{\n    // setup the fake server with entire dataset\n    var fakeServer = new FakeServer(data);\n    // create datasource with a reference to the fake server\n    var datasource = getServerSideDatasource(fakeServer);\n    // register the datasource with the grid\n    params.api.setServerSideDatasource(datasource);\n}"
  },
  "template": "GRID_TEMPLATE_PLACEHOLDER\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine-dark",
    "enterprise": true,
    "exampleHeight": 590,
    "extras": ["alasql"],
    "modules": [
      "serverside",
      "clientside",
      "masterdetail",
      "rowgrouping",
      "menu",
      "columnpanel"
    ]
  }
}
