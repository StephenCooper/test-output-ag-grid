{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    {\n        field: 'athlete',\n        cellRendererSelector: function (params) {\n            if (params.node.rowPinned) {\n                return {\n                    component: 'customPinnedRowRenderer',\n                    params: {\n                        style: { color: 'blue' },\n                    },\n                };\n            }\n            else {\n                // rows that are not pinned don't use any cell renderer\n                return undefined;\n            }\n        },\n    },\n    {\n        field: 'age',\n        cellRendererSelector: function (params) {\n            if (params.node.rowPinned) {\n                return {\n                    component: 'customPinnedRowRenderer',\n                    params: {\n                        style: { 'font-style': 'italic' },\n                    },\n                };\n            }\n            else {\n                // rows that are not pinned don't use any cell renderer\n                return undefined;\n            }\n        },\n    },\n    { field: 'country' },\n    { field: 'year' },\n    { field: 'date' },\n    { field: 'sport' },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    width: 200,\n    sortable: true,\n    filter: true,\n    resizable: true,\n}"
    },
    { "name": "rowData", "value": "null" },
    {
      "name": "getRowStyle",
      "value": "function (params) {\n    if (params.node.rowPinned) {\n        return { 'font-weight': 'bold' };\n    }\n}"
    },
    { "name": "pinnedTopRowData", "value": "createData(1, 'Top')" },
    { "name": "pinnedBottomRowData", "value": "createData(1, 'Bottom')" },
    {
      "name": "components",
      "value": "{\n    customPinnedRowRenderer: CustomPinnedRowRenderer,\n}"
    }
  ],
  "components": [
    { "name": "customPinnedRowRenderer", "value": "CustomPinnedRowRenderer" }
  ],
  "defaultColDef": "{\n    width: 200,\n    sortable: true,\n    filter: true,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'athlete',\n    cellRendererSelector: \"AG_FUNCTION_function (params) {\\n    if (params.node.rowPinned) {\\n        return {\\n            component: \\'customPinnedRowRenderer\\',\\n            params: {\\n                style: { color: \\'blue\\' },\\n            },\\n        };\\n    }\\n    else {\\n        // rows that are not pinned don\\'t use any cell renderer\\n        return undefined;\\n    }\\n}\" },\n    {\n        field: 'age',\n    cellRendererSelector: \"AG_FUNCTION_function (params) {\\n    if (params.node.rowPinned) {\\n        return {\\n            component: \\'customPinnedRowRenderer\\',\\n            params: {\\n                style: { \\'font-style\\': \\'italic\\' },\\n            },\\n        };\\n    }\\n    else {\\n        // rows that are not pinned don\\'t use any cell renderer\\n        return undefined;\\n    }\\n}\" },\n    { field: 'country' },\n    { field: 'year' },\n    { field: 'date' },\n    { field: 'sport' }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "onPinnedRowTopCount",
      "params": "",
      "body": "function onPinnedRowTopCount() {\n    var headerRowsToFloat = (document.getElementById('top-row-count')).value;\n    var count = Number(headerRowsToFloat);\n    var rows = createData(count, 'Top');\n    this.gridApi.setPinnedTopRowData(rows);\n}"
    },
    {
      "name": "onPinnedRowBottomCount",
      "params": "",
      "body": "function onPinnedRowBottomCount() {\n    var footerRowsToFloat = (document.getElementById('bottom-row-count')).value;\n    var count = Number(footerRowsToFloat);\n    var rows = createData(count, 'Bottom');\n    this.gridApi.setPinnedBottomRowData(rows);\n}"
    }
  ],
  "utils": [
    "function createData(count, prefix) {\n    var result = [];\n    for (var i = 0; i < count; i++) {\n        result.push({\n            athlete: prefix + ' Athlete ' + i,\n            age: prefix + ' Age ' + i,\n            country: prefix + ' Country ' + i,\n            year: prefix + ' Year ' + i,\n            date: prefix + ' Date ' + i,\n            sport: prefix + ' Sport ' + i,\n        });\n    }\n    return result;\n}"
  ],
  "callbackDependencies": {
    "onPinnedRowTopCount": ["Number", "createData", "gridOptions"],
    "onPinnedRowBottomCount": ["Number", "createData", "gridOptions"]
  },
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
    "callback": "params.api.setRowData(data)"
  },
  "template": "<div class=\"example-wrapper\">\n    <div class=\"example-header\">\n        <span>\n            Rows to Pin on Top:\n        </span>\n        <select onchange=\"onPinnedRowTopCount()\" id=\"top-row-count\" style=\"margin-left: 10px; margin-right: 20px;\">\n            <option value=\"0\">0</option>\n            <option value=\"1\" selected=\"\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n        </select>\n        <span>\n            Rows to Pin on Bottom:\n        </span>\n        <select onchange=\"onPinnedRowBottomCount()\" id=\"bottom-row-count\" style=\"margin-left: 10px;\">\n            <option value=\"0\">0</option>\n            <option value=\"1\" selected=\"\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n        </select>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>\n",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "exampleHeight": 580
  }
}
