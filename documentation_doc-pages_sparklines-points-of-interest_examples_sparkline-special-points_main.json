{
  "eventHandlers": [],
  "properties": [
    { "name": "rowHeight", "value": "70" },
    {
      "name": "columnDefs",
      "value": "[\n    {\n        field: 'sparkline',\n        headerName: 'Line Sparkline',\n        minWidth: 100,\n        cellRenderer: 'agSparklineCellRenderer',\n        cellRendererParams: {\n            sparklineOptions: {\n                line: {\n                    stroke: 'rgb(124, 255, 178)',\n                    strokeWidth: 3,\n                },\n                padding: {\n                    top: 10,\n                    bottom: 10,\n                },\n                marker: {\n                    shape: 'diamond',\n                    formatter: lineMarkerFormatter,\n                },\n            },\n        },\n    },\n    {\n        field: 'sparkline',\n        headerName: 'Column Sparkline',\n        minWidth: 100,\n        cellRenderer: 'agSparklineCellRenderer',\n        cellRendererParams: {\n            sparklineOptions: {\n                type: 'column',\n                padding: {\n                    top: 10,\n                    bottom: 10,\n                },\n                formatter: columnFormatter,\n            },\n        },\n    },\n    {\n        field: 'sparkline',\n        headerName: 'Area Sparkline',\n        minWidth: 100,\n        cellRenderer: 'agSparklineCellRenderer',\n        cellRendererParams: {\n            sparklineOptions: {\n                type: 'area',\n                fill: 'rgba(84, 112, 198, 0.3)',\n                line: {\n                    stroke: 'rgb(84, 112, 198)',\n                },\n                padding: {\n                    top: 10,\n                    bottom: 10,\n                },\n                marker: {\n                    formatter: areaMarkerFormatter,\n                },\n            },\n        },\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 100,\n    resizable: true,\n}"
    },
    { "name": "rowData", "value": "getData()" }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 100,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'sparkline',\n    headerName: 'Line Sparkline',\n    minWidth: 100,\n    cellRenderer: 'agSparklineCellRenderer',\n    cellRendererParams : { sparklineOptions : {\n    line : {\n    stroke: 'rgb(124, 255, 178)',\n    strokeWidth: 3\n },\n    padding : {\n    top: 10,\n    bottom: 10\n },\n    marker : {\n    shape: 'diamond',\n    formatter: 'AG_LITERAL_lineMarkerFormatter'\n }\n } } },\n    {\n        field: 'sparkline',\n    headerName: 'Column Sparkline',\n    minWidth: 100,\n    cellRenderer: 'agSparklineCellRenderer',\n    cellRendererParams : { sparklineOptions : {\n    type: 'column',\n    padding : {\n    top: 10,\n    bottom: 10\n },\n    formatter: 'AG_LITERAL_columnFormatter'\n } } },\n    {\n        field: 'sparkline',\n    headerName: 'Area Sparkline',\n    minWidth: 100,\n    cellRenderer: 'agSparklineCellRenderer',\n    cellRendererParams : { sparklineOptions : {\n    type: 'area',\n    fill: 'rgba(84, 112, 198, 0.3)',\n    line : { stroke: 'rgb(84, 112, 198)' },\n    padding : {\n    top: 10,\n    bottom: 10\n },\n    marker : { formatter: 'AG_LITERAL_areaMarkerFormatter' }\n } } }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "const colors = {\n    firstLast: 'rgb(253, 221, 96)',\n    min: 'rgb(239, 108, 0)',\n    max: 'rgb(59, 162, 114)',\n    negative: 'rgb(255, 110, 118)',\n    positive: 'rgba(0,128,0, 0.3)',\n    highlighted: 'rgb(88, 217, 249)',\n};",
    "function lineMarkerFormatter(params) {\n    const { min, max, first, last, highlighted } = params;\n    const color = highlighted\n        ? colors.highlighted\n        : min\n            ? colors.min\n            : max\n                ? colors.max\n                : colors.firstLast;\n    return {\n        size: highlighted || min || max || first || last ? 5 : 0,\n        fill: color,\n        stroke: color,\n    };\n}",
    "function columnFormatter(params) {\n    const { first, last, yValue, highlighted } = params;\n    let fill = undefined;\n    if (!highlighted) {\n        if (first || last) {\n            fill = colors.firstLast;\n        }\n        else if (yValue < 0) {\n            fill = colors.negative;\n        }\n        else {\n            fill = colors.positive;\n        }\n    }\n    else {\n        fill = colors.highlighted;\n    }\n    return { fill };\n}",
    "function areaMarkerFormatter(params) {\n    const { min, max, first, last, highlighted } = params;\n    const color = highlighted\n        ? colors.highlighted\n        : min\n            ? colors.min\n            : max\n                ? colors.max\n                : colors.firstLast;\n    return {\n        size: highlighted || min || max || first || last ? 5 : 0,\n        fill: color,\n        stroke: color,\n    };\n}"
  ],
  "callbackDependencies": {
    "lineMarkerFormatter": [
      "highlighted",
      "colors",
      "min",
      "max",
      "first",
      "last"
    ],
    "columnFormatter": ["highlighted", "first", "last", "colors", "yValue"],
    "areaMarkerFormatter": [
      "highlighted",
      "colors",
      "min",
      "max",
      "first",
      "last"
    ]
  },
  "template": "GRID_TEMPLATE_PLACEHOLDER",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 585,
    "modules": ["clientside", "sparklines"]
  }
}
