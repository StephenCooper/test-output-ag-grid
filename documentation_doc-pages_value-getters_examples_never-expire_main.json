{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'q1', type: 'quarterFigure' },\n    { field: 'q2', type: 'quarterFigure' },\n    { field: 'q3', type: 'quarterFigure' },\n    { field: 'q4', type: 'quarterFigure' },\n    { field: 'year', rowGroup: true, hide: true },\n    {\n        headerName: 'Total',\n        colId: 'total',\n        cellClass: 'number-cell total-col',\n        aggFunc: 'sum',\n        valueFormatter: formatNumber,\n        valueGetter: totalValueGetter,\n    },\n    {\n        headerName: 'Total x 10',\n        cellClass: 'number-cell total-col',\n        aggFunc: 'sum',\n        minWidth: 120,\n        valueFormatter: formatNumber,\n        valueGetter: total10ValueGetter,\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    resizable: true,\n}"
    },
    { "name": "autoGroupColumnDef", "value": "{\n    minWidth: 130,\n}" },
    {
      "name": "columnTypes",
      "value": "{\n    quarterFigure: {\n        editable: true,\n        cellClass: 'number-cell',\n        aggFunc: 'sum',\n        valueFormatter: formatNumber,\n        valueParser: function numberParser(params) {\n            return Number(params.newValue);\n        },\n    },\n}"
    },
    { "name": "valueCache", "value": "true" },
    { "name": "valueCacheNeverExpires", "value": "true" },
    { "name": "rowData", "value": "getData()" },
    { "name": "suppressAggFuncInHeader", "value": "true" },
    { "name": "enableCellChangeFlash", "value": "true" },
    { "name": "enableRangeSelection", "value": "true" },
    { "name": "groupDefaultExpanded", "value": "1" },
    {
      "name": "getRowNodeId",
      "value": "function (data) {\n    return data.id;\n}"
    }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    resizable: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'q1',\n    type: 'quarterFigure' },\n    {\n        field: 'q2',\n    type: 'quarterFigure' },\n    {\n        field: 'q3',\n    type: 'quarterFigure' },\n    {\n        field: 'q4',\n    type: 'quarterFigure' },\n    {\n        field: 'year',\n    rowGroup: true,\n    hide: true },\n    {\n        headerName: 'Total',\n    colId: 'total',\n    cellClass: 'number-cell total-col',\n    aggFunc: 'sum',\n    valueFormatter: 'AG_LITERAL_formatNumber',\n    valueGetter: 'AG_LITERAL_totalValueGetter' },\n    {\n        headerName: 'Total x 10',\n    cellClass: 'number-cell total-col',\n    aggFunc: 'sum',\n    minWidth: 120,\n    valueFormatter: 'AG_LITERAL_formatNumber',\n    valueGetter: 'AG_LITERAL_total10ValueGetter' }]",
  "instanceMethods": [],
  "externalEventHandlers": [
    {
      "name": "onExpireValueCache",
      "params": "",
      "body": "function onExpireValueCache() {\n    console.log('onInvalidateValueCache -> start');\n    this.gridApi.expireValueCache();\n    console.log('onInvalidateValueCache -> end');\n}"
    },
    {
      "name": "onRefreshCells",
      "params": "",
      "body": "function onRefreshCells() {\n    console.log('onRefreshCells -> start');\n    this.gridApi.refreshClientSideRowModel('aggregate');\n    this.gridApi.refreshCells();\n    console.log('onRefreshCells -> end');\n}"
    },
    {
      "name": "onUpdateOneValue",
      "params": "",
      "body": "function onUpdateOneValue() {\n    var randomId = Math.floor(Math.random() * 10) + '';\n    var rowNode = this.gridApi.getRowNode(randomId);\n    if (rowNode) {\n        var randomCol = ['q1', 'q2', 'q3', 'q4'][Math.floor(Math.random() * 4)];\n        var newValue = Math.floor(Math.random() * 1000);\n        console.log('onUpdateOneValue -> start');\n        rowNode.setDataValue(randomCol, newValue);\n        console.log('onUpdateOneValue -> end');\n    }\n}"
    }
  ],
  "utils": [
    "var callCount = 1;",
    "var totalValueGetter = function (params) {\n    var q1 = params.getValue('q1');\n    var q2 = params.getValue('q2');\n    var q3 = params.getValue('q3');\n    var q4 = params.getValue('q4');\n    var result = q1 + q2 + q3 + q4;\n    console.log('Total Value Getter (' +\n        callCount +\n        ', ' +\n        params.column.getId() +\n        '): ' +\n        [q1, q2, q3, q4].join(', ') +\n        ' = ' +\n        result);\n    callCount++;\n    return result;\n};",
    "var total10ValueGetter = function (params) {\n    var total = params.getValue('total');\n    return total * 10;\n};",
    "function formatNumber(params) {\n    var number = params.value;\n    // this puts commas into the number eg 1000 goes to 1,000,\n    // i pulled this from stack overflow, i have no idea how it works\n    return Math.floor(number)\n        .toString()\n        .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}"
  ],
  "callbackDependencies": {
    "formatNumber": ["Math"],
    "onExpireValueCache": ["gridOptions"],
    "onRefreshCells": ["gridOptions"],
    "onUpdateOneValue": ["Math", "gridOptions"]
  },
  "template": "\n\n<div style=\"height: 100%; box-sizing: border-box; padding-top: 20px;\">\n    GRID_TEMPLATE_PLACEHOLDER\n</div>\n<div style=\"position: absolute; top: 10px; left: 15px;\">\n    <button onclick=\"onUpdateOneValue()\">Update One Value</button>\n    <button onclick=\"onExpireValueCache()\">Expire Value Cache</button>\n    <button onclick=\"onRefreshCells()\">Aggregate Data &amp; Refresh Cells</button>\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine-dark",
    "enterprise": true,
    "exampleHeight": 610,
    "modules": ["clientside", "rowgrouping"]
  }
}
