{
  "properties": [
    {
      "name": "options",
      "value": "{\n        \n        autoSize: true,\n        data: data.filter(function (d) {\n            return d.magnitude > 4;\n        }),\n        title: {\n            text: 'Worldwide Earthquakes (first week of February 2020)',\n            fontSize: 18\n        },\n        subtitle: { text: 'Source: US Geological Survey' },\n        series: [{\n                type: 'scatter',\n                xKey: 'depth',\n                xName: 'Depth',\n                yKey: 'minDistance',\n                yName: 'Minimum Distance',\n                sizeKey: 'magnitude',\n                sizeName: 'Magnitude',\n                marker: {\n                    size: minSize,\n                    maxSize: maxSize,\n                    formatter: function (params) {\n                        return { fill: params.highlighted ? params.fill : calculateColour(params.size) };\n                    },\n                    strokeWidth: 0\n                },\n                fillOpacity: 0.7\n            }],\n        axes: [\n            {\n                position: 'bottom',\n                type: 'number',\n                title: { text: 'Depth (m)' }\n            },\n            {\n                position: 'left',\n                type: 'number',\n                title: { text: 'Minimum distance (km)' }\n            }\n        ],\n        legend: { enabled: false }\n    }"
    }
  ],
  "externalEventHandlers": [],
  "instanceMethods": [],
  "globals": [
    "var minSize = 5;",
    "var maxSize = 100;",
    "function find(arr, predicate) {\n    for (var i = 0, ln = arr.length; i < ln; i++) {\n        var value = arr[i];\n        if (predicate(value, i, arr)) {\n            return value;\n        }\n    }\n}",
    "function calculateColour(size) {\n    var colours = {\n        0.1: '#33CC00',\n        0.2: '#5CC200',\n        0.3: '#85B800',\n        0.4: '#ADAD00',\n        0.5: '#D6A300',\n        0.6: '#FF9900',\n        0.7: '#FF7300',\n        0.8: '#FF4D00',\n        0.9: '#FF2600',\n        1: '#FF0000'\n    };\n    var position = (size - minSize) / (maxSize - minSize);\n    var keys = Object.keys(colours).map(function (key) {\n        return parseFloat(key);\n    }).sort();\n    var matchingKey = find(keys, function (key) {\n        return key > position;\n    });\n    return colours[matchingKey];\n}"
  ],
  "init": [],
  "template": "$$CHART$$\n"
}
