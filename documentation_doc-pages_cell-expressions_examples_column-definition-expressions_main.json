{
  "eventHandlers": [
    {
      "name": "cellValueChanged",
      "handlerName": "onCellValueChanged",
      "handler": "function onCellValueChanged(event) {\n    console.log('data after changes is: ', event.data);\n}"
    }
  ],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    {\n        headerName: 'String (editable)',\n        field: 'simple',\n        editable: true,\n    },\n    {\n        headerName: 'Bad Number (editable)',\n        field: 'numberBad',\n        editable: true,\n    },\n    {\n        headerName: 'Good Number (editable)',\n        field: 'numberGood',\n        editable: true,\n        valueFormatter: `\"Â£\" + Math.floor(value).toString().replace(/(\\\\d)(?=(\\\\d{3})+(?!\\\\d))/g, \"$1,\")`,\n        valueParser: 'Number(newValue)',\n    },\n    {\n        headerName: 'Name (editable)',\n        editable: true,\n        valueGetter: 'data.firstName + \" \" + data.lastName',\n        valueSetter: \n        // an expression can span multiple lines!!!\n        `var nameSplit = newValue.split(\" \");\n             var newFirstName = nameSplit[0];\n             var newLastName = nameSplit[1];\n             if (data.firstName !== newFirstName || data.lastName !== newLastName) {  \n                data.firstName = newFirstName;  \n                data.lastName = newLastName;  \n                return true;\n            } else {  \n                return false;\n            }`,\n    },\n    { headerName: 'A', field: 'a', maxWidth: 120 },\n    { headerName: 'B', field: 'b', maxWidth: 120 },\n    { headerName: 'A + B', valueGetter: 'data.a + data.b', maxWidth: 120 },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 200,\n    resizable: true,\n}"
    },
    { "name": "enableRangeSelection", "value": "true" },
    { "name": "rowData", "value": "getData()" }
  ],
  "components": [],
  "defaultColDef": null,
  "globalComponents": [],
  "parsedColDefs": "",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [],
  "callbackDependencies": {},
  "resizeToFit": true,
  "template": "GRID_TEMPLATE_PLACEHOLDER",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine-dark",
    "exampleHeight": 560
  }
}
