{
  "eventHandlers": [],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    { field: 'country', rowGroup: true },\n    { field: 'athlete' },\n    { field: 'date' },\n    { field: 'sport' },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' },\n]"
    },
    { "name": "animateRows", "value": "true" },
    { "name": "getRowHeight", "value": null }
  ],
  "components": [],
  "defaultColDef": null,
  "globalComponents": [],
  "parsedColDefs": "[{\n        field: 'country',\n    rowGroup: true },\n    { field: 'athlete' },\n    { field: 'date' },\n    { field: 'sport' },\n    { field: 'gold' },\n    { field: 'silver' },\n    { field: 'bronze' },\n    { field: 'total' }]",
  "instanceMethods": [
    "function getRowHeight(params) {\n    if (params.node.group && groupHeight != null) {\n        return groupHeight;\n    }\n    else if (params.data &&\n        params.data.country === 'Russia' &&\n        russiaHeight != null) {\n        return russiaHeight;\n    }\n    else if (params.data &&\n        params.data.sport === 'Swimming' &&\n        swimmingHeight != null) {\n        return swimmingHeight;\n    }\n}"
  ],
  "externalEventHandlers": [
    {
      "name": "setSwimmingHeight",
      "params": "42",
      "body": "function setSwimmingHeight(height) {\n    swimmingHeight = height;\n    this.gridApi.resetRowHeights();\n}"
    },
    {
      "name": "setGroupHeight",
      "params": "42",
      "body": "function setGroupHeight(height) {\n    groupHeight = height;\n    this.gridApi.resetRowHeights();\n}"
    },
    {
      "name": "setRussiaHeight",
      "params": "42",
      "body": "function setRussiaHeight(height) {\n    // this is used next time resetRowHeights is called\n    russiaHeight = height;\n    this.gridApi.forEachNode(function (rowNode) {\n        if (rowNode.data && rowNode.data.country === 'Russia') {\n            rowNode.setRowHeight(height);\n        }\n    });\n    this.gridApi.onRowHeightChanged();\n}"
    }
  ],
  "utils": ["var swimmingHeight;", "var groupHeight;", "var russiaHeight;"],
  "callbackDependencies": {
    "getRowHeight": ["groupHeight", "russiaHeight", "swimmingHeight"],
    "setSwimmingHeight": ["swimmingHeight", "gridOptions"],
    "setGroupHeight": ["groupHeight", "gridOptions"],
    "setRussiaHeight": ["russiaHeight", "gridOptions"]
  },
  "data": {
    "url": "'https://www.ag-grid.com/example-assets/olympic-winners.json'",
    "callback": "params.api.setRowData(data)"
  },
  "template": "<div class=\"example-wrapper\">\n    <div style=\"margin-bottom: 5px; font-family: Verdana, Geneva, Tahoma, sans-serif; font-size: 13px;\">\n        <div>\n            Top Level Groups:\n            <button onclick=\"setGroupHeight(42)\">42px</button>\n            <button onclick=\"setGroupHeight(75)\">75px</button>\n            <button onclick=\"setGroupHeight(125)\">125px</button>\n        </div>\n        <div style=\"margin-top: 5px;\">\n            Swimming Leaf Rows:\n            <button onclick=\"setSwimmingHeight(42)\">42px</button>\n            <button onclick=\"setSwimmingHeight(75)\">75px</button>\n            <button onclick=\"setSwimmingHeight(125)\">125px</button>\n        </div>\n        <div style=\"margin-top: 5px;\">\n            Russia Leaf Rows:\n            <button onclick=\"setRussiaHeight(42)\">42px</button>\n            <button onclick=\"setRussiaHeight(75)\">75px</button>\n            <button onclick=\"setRussiaHeight(125)\">125px</button>\n        </div>\n    </div>\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 590,
    "modules": ["clientside", "rowgrouping", "menu", "columnpanel"]
  }
}
