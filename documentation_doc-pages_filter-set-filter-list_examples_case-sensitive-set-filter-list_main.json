{
  "eventHandlers": [
    {
      "name": "firstDataRendered",
      "handlerName": "onFirstDataRendered",
      "handler": "function onFirstDataRendered(params) {\n    ;\n    ((params.api.getToolPanelInstance('filters'))).expandFilters();\n}"
    }
  ],
  "properties": [
    {
      "name": "columnDefs",
      "value": "[\n    {\n        headerName: 'Case Insensitive (default)',\n        field: 'colour',\n        filter: 'agSetColumnFilter',\n        filterParams: {\n            caseSensitive: false,\n            cellRenderer: colourCellRenderer,\n        },\n    },\n    {\n        headerName: 'Case Sensitive',\n        field: 'colour',\n        filter: 'agSetColumnFilter',\n        filterParams: {\n            caseSensitive: true,\n            cellRenderer: colourCellRenderer,\n        },\n    },\n]"
    },
    {
      "name": "defaultColDef",
      "value": "{\n    flex: 1,\n    minWidth: 225,\n    cellRenderer: colourCellRenderer,\n    resizable: true,\n    floatingFilter: true,\n}"
    },
    { "name": "sideBar", "value": "'filters'" },
    { "name": "rowData", "value": "getData()" }
  ],
  "components": [],
  "defaultColDef": "{\n    flex: 1,\n    minWidth: 225,\n    cellRenderer: colourCellRenderer,\n    resizable: true,\n    floatingFilter: true,\n}",
  "globalComponents": [],
  "parsedColDefs": "[{\n        headerName: 'Case Insensitive (default)',\n    field: 'colour',\n    filter: 'agSetColumnFilter',\n    filterParams : {\n    caseSensitive: false,\n    cellRenderer: 'AG_LITERAL_colourCellRenderer'\n } },\n    {\n        headerName: 'Case Sensitive',\n    field: 'colour',\n    filter: 'agSetColumnFilter',\n    filterParams : {\n    caseSensitive: true,\n    cellRenderer: 'AG_LITERAL_colourCellRenderer'\n } }]",
  "instanceMethods": [],
  "externalEventHandlers": [],
  "utils": [
    "const FIXED_STYLES = 'vertical-align: middle; border: 1px solid black; margin: 3px; display: inline-block; width: 10px; height: 10px';",
    "function colourCellRenderer(params) {\n    if (!params.value || params.value === '(Select All)') {\n        return params.value;\n    }\n    return `<div style=\"background-color: ${params.value.toLowerCase()}; ${FIXED_STYLES}\"></div>${params.value}`;\n}"
  ],
  "callbackDependencies": {},
  "template": "<div style=\"display: flex; flex-direction: column; height: 100%;\">\n    GRID_TEMPLATE_PLACEHOLDER\n</div>",
  "gridSettings": {
    "width": "100%",
    "height": "100%",
    "theme": "ag-theme-alpine",
    "enterprise": true,
    "exampleHeight": 720,
    "modules": ["clientside", "setfilter", "menu", "columnpanel", "filterpanel"]
  }
}
